[tool.poetry]
name = "nshm-toshi-client"
version = "1.0.0"
description = "client for toshi API"
authors = ["Chris Chamberlain <chrisbc@artisan.co.nz>"]
readme="README.md"
license = "GNU Affero V3"

packages = [
	{ include = "nshm_toshi_client" },
	{ include = "tests", format = "sdist" }
]

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.27.1"
graphql-core = "^3.2.1"
gql = "^3.2.0"
aiohttp = "^3.8.1"
async-timeout = "^4.0.2"

[tool.poetry.dev-dependencies]
requests-mock = "^1.9.3"
bump2version = {version = "^1.0.1"}
tox = "^3.25.0"
black = "^22.3.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pip = "^22.0.4"
virtualenv = "^20.14.1"
flake8 = "^4.0.1"
flake8-docstrings = "^1.6.0"
isort = "^5.10.1"
twine = "^4.0.0"
Jinja2 = "^3.1.2"
pymdown-extensions = "^9.4"
mkdocstrings-python = "^0.6.6"
mkdocs-pymdownx-material-extras = "^2.0.3"
mkdocs-include-markdown-plugin  = { version = "^1.0.0"}
mkdocs-material  = { version = "^6.1.7"}
mkdocstrings  = { version = "^0.18.0" }
mkdocs-autorefs = {version = "^0.3.1"}
mkdocs-material-extensions  = {version = "^1.0.1"}

toml = {version = "^0.10.2", optional = true}
pre-commit = {version = "^2.18.1", optional = true}

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs"
    ]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py38','py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

{"version":3,"file":"1b1b6653.js","mappings":";AAmCA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAvCA;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AAoEA;;AApEA;;;;;;;;ACDA;;;;;;;;;;;;;;;;;AAAA;;AC4BA;AACA;;AAEA;AACA;;;;AAIA;;;;;AAKA;;;;;AAOA;;AAEA;;;;AAQA;;;;AAIA;;;;AAIA;AACA;;;;;AAKA;;;;;;;AAOA;;;;AAIA;;;;;AAKA;;;;;;;AAOA;;;;;;;;;AASA;AAOA;;AAGA;AACA;;AAGA;AACA;;;;AAKA;;;;AAKA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA1HA;;ACmCA;;;;;;AAMA;;;AAKA;;;;AAIA;AAKA;;;AAQA;AAGA;;AAMA;;;AAGA;;AAIA;;;;;AASA;;;;;AAUA;AAKA;AACA;AAEA;AACA;AACA;;AAGA;AAGA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlHA;;AC4DA;AAEA;;;AAKA;;;;AAIA;;AATA;AAeA;;;AAUA;;AAIA;;AAIA;;AAIA;AACA;AAGA;;AAEA;;;AALA;;AAeA;;AAEA;;AAnFA;;;;AAyFA;;;;AAIA;;;;;AAKA;;;;AAIA;;;;AAIA;;;AAGA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7HA","sources":["webpack://home-assistant-frontend/./src/components/ha-button-menu.ts","webpack://home-assistant-frontend/./src/components/ha-card.ts","webpack://home-assistant-frontend/./src/components/ha-logo-svg.ts","webpack://home-assistant-frontend/./src/panels/config/info/ha-config-info.ts","webpack://home-assistant-frontend/./src/panels/config/info/integrations-card.ts","webpack://home-assistant-frontend/./src/panels/config/info/system-health-card.ts"],"sourcesContent":["import \"@material/mwc-menu\";\nimport type { Corner, Menu, MenuCorner } from \"@material/mwc-menu\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\n\n@customElement(\"ha-button-menu\")\nexport class HaButtonMenu extends LitElement {\n  @property() public corner: Corner = \"TOP_START\";\n\n  @property() public menuCorner: MenuCorner = \"START\";\n\n  @property({ type: Number }) public x?: number;\n\n  @property({ type: Number }) public y?: number;\n\n  @property({ type: Boolean }) public multi = false;\n\n  @property({ type: Boolean }) public activatable = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public fixed = false;\n\n  @query(\"mwc-menu\", true) private _menu?: Menu;\n\n  public get items() {\n    return this._menu?.items;\n  }\n\n  public get selected() {\n    return this._menu?.selected;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div @click=${this._handleClick}>\n        <slot name=\"trigger\"></slot>\n      </div>\n      <mwc-menu\n        .corner=${this.corner}\n        .menuCorner=${this.menuCorner}\n        .fixed=${this.fixed}\n        .multi=${this.multi}\n        .activatable=${this.activatable}\n        .y=${this.y}\n        .x=${this.x}\n      >\n        <slot></slot>\n      </mwc-menu>\n    `;\n  }\n\n  private _handleClick(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._menu!.anchor = this;\n    this._menu!.show();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-block;\n        position: relative;\n      }\n      ::slotted([disabled]) {\n        color: var(--disabled-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-menu\": HaButtonMenu;\n  }\n}\n","import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n\n@customElement(\"ha-card\")\nexport class HaCard extends LitElement {\n  @property() public header?: string;\n\n  @property({ type: Boolean, reflect: true }) public outlined = false;\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--card-background-color, #F7ECEB)\n        );\n        border-radius: var(--ha-card-border-radius, 20px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n          0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n          0px 1px 3px 0px rgba(0, 0, 0, 0.12)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      :host([outlined]) {\n        box-shadow: none;\n        border-width: var(--ha-card-border-width, 1px);\n        border-style: solid;\n        border-color: var(\n          --ha-card-border-color,\n          var(--divider-color, #e0e0e0)\n        );\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 48px;\n        padding: 12px 16px 16px;\n        display: block;\n        margin-block-start: 0px;\n        margin-block-end: 0px;\n        font-weight: normal;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid var(--divider-color, #e8e8e8);\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`<h1 class=\"card-header\">${this.header}</h1>`\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","import { css, CSSResultGroup, LitElement, svg, SVGTemplateResult } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-logo-svg\")\nexport class HaLogoSvg extends LitElement {\n  protected render(): SVGTemplateResult {\n    return svg`\n      <svg version=\"1.1\" viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"200px\" height=\"200px\" viewBox=\"0 0 200 200\" version=\"1.1\">\n<g id=\"surface1\">\n<path style=\" stroke:none;fill-rule:nonzero;fill:rgb(41.568627%,65.882353%,30.980392%);fill-opacity:1;\" d=\"M 94.445312 9.148438 C 91.222656 9.40625 79.035156 11.109375 77.40625 11.519531 C 71.183594 13.074219 71.109375 13.109375 71.109375 13.964844 C 71.109375 14.40625 71.296875 14.890625 71.480469 15 C 72.257812 15.480469 76.296875 24.40625 77.777344 28.890625 C 78.628906 31.445312 79.480469 34.851562 79.703125 36.480469 C 80.257812 40.554688 79.925781 47.445312 79.035156 49.890625 C 78.296875 52.035156 78.519531 52.628906 79.742188 51.851562 C 81.851562 50.519531 90.445312 46.296875 91.890625 45.925781 C 92.777344 45.667969 94.035156 45.222656 94.703125 44.964844 C 95.332031 44.667969 96.371094 44.445312 97 44.445312 C 98.925781 44.445312 98.40625 45.480469 95.851562 46.703125 C 94.554688 47.296875 92.777344 48.222656 91.851562 48.742188 C 90.925781 49.257812 88.851562 50.445312 87.222656 51.371094 C 78.925781 56.109375 70.667969 63.925781 65.183594 72.222656 C 61.667969 77.59375 59.035156 82.332031 59.554688 82.519531 C 59.742188 82.554688 61.035156 81.519531 62.445312 80.148438 C 66.519531 76.183594 74.480469 71.332031 80.925781 68.851562 C 86.296875 66.777344 96.109375 64.667969 105 63.703125 C 108.667969 63.296875 119.222656 63.183594 120.148438 63.554688 C 121.183594 63.964844 120.816406 64.703125 118.628906 66.519531 C 113.035156 71.296875 108.59375 77.074219 104.257812 85.183594 C 99.519531 94.109375 98.851562 95.222656 96.371094 98.890625 C 94 102.332031 90.890625 106.222656 89.445312 107.519531 C 87.554688 109.183594 82.445312 112.703125 79.964844 114.035156 C 77.183594 115.519531 71.816406 117.40625 68.222656 118.109375 C 67.148438 118.332031 64.890625 118.519531 63.183594 118.519531 C 59.519531 118.519531 58.851562 118.109375 59.554688 116.183594 C 59.777344 115.519531 60.222656 113.851562 60.554688 112.445312 C 62.148438 105.371094 67.148438 96.445312 72.925781 90.222656 C 74.890625 88.148438 80.667969 83.183594 82.667969 81.851562 C 84.074219 80.925781 84.445312 80.371094 83.628906 80.371094 C 83.035156 80.371094 78.074219 83.109375 75.183594 85.074219 C 70.703125 88.074219 68.703125 89.851562 65.109375 94 C 56.851562 103.667969 52.964844 111.519531 52.964844 118.667969 C 52.964844 120.109375 53.371094 123.371094 53.890625 125.925781 C 54.816406 130.519531 57.40625 139.148438 58.296875 140.554688 C 58.554688 140.964844 59.074219 142.109375 59.445312 143.148438 C 59.816406 144.148438 60.332031 145.257812 60.59375 145.554688 C 60.816406 145.851562 61.40625 146.851562 61.851562 147.777344 C 62.628906 149.332031 64.332031 151.964844 67.40625 156.480469 C 68.109375 157.480469 70.851562 160.519531 73.519531 163.148438 C 79.628906 169.257812 85.40625 173.40625 93.777344 177.667969 C 96.371094 178.964844 102.628906 181.109375 103.851562 181.109375 C 104.257812 181.109375 105.40625 181.332031 106.445312 181.628906 C 109.964844 182.628906 115.332031 182.964844 121.851562 182.554688 C 125.222656 182.332031 128.816406 181.964844 129.816406 181.667969 C 130.851562 181.40625 132.742188 180.890625 134.074219 180.554688 C 138.667969 179.332031 143.296875 177.445312 147.777344 174.964844 C 151.628906 172.851562 153.777344 171.371094 157.445312 168.296875 C 160.40625 165.851562 161.074219 164.851562 159.554688 165.371094 C 159.074219 165.519531 157.777344 165.851562 156.667969 166.109375 C 155.554688 166.371094 154.222656 166.742188 153.703125 166.964844 C 153.183594 167.148438 151.703125 167.519531 150.371094 167.742188 C 149.035156 167.925781 146.554688 168.371094 144.816406 168.667969 C 133.59375 170.59375 126.257812 170.554688 113.703125 168.480469 C 107.925781 167.554688 105.890625 167.109375 105.40625 166.703125 C 105.183594 166.519531 104.296875 166.257812 103.445312 166.109375 C 102.59375 166 100.519531 165.371094 98.816406 164.742188 C 97.109375 164.109375 94.890625 163.296875 93.816406 162.925781 C 91.371094 162.109375 83.183594 158 79.890625 156 C 75.035156 153.035156 71.222656 149.40625 73.816406 150.222656 C 74.257812 150.332031 77 151.59375 79.925781 153 C 82.816406 154.40625 85.332031 155.554688 85.480469 155.554688 C 85.628906 155.554688 87.074219 156.074219 88.703125 156.667969 C 93.074219 158.332031 101.222656 160.480469 105.554688 161.109375 C 110.628906 161.851562 121.183594 162.257812 124.628906 161.851562 C 126.480469 161.628906 129.222656 161.296875 130.742188 161.109375 C 139.890625 160 151.851562 155.554688 159.074219 150.554688 C 164.925781 146.519531 172.296875 139.703125 175.703125 135.183594 C 179.667969 129.890625 185.925781 118.40625 185.925781 116.445312 C 185.925781 116.109375 186.109375 115.519531 186.332031 115.074219 C 186.703125 114.40625 187.445312 111.777344 188.890625 105.925781 C 189.628906 102.816406 190.035156 92.851562 189.59375 87.628906 C 189.148438 82.332031 187.554688 75.035156 185.925781 70.742188 C 185.480469 69.628906 184.890625 67.964844 184.554688 67.035156 C 183.035156 62.554688 178.554688 54.257812 174.519531 48.332031 C 171.777344 44.296875 168.964844 41.109375 162.816406 35.074219 C 157.371094 29.742188 152.332031 25.890625 145.703125 22.035156 C 143.667969 20.851562 141.59375 19.59375 141.035156 19.222656 C 140.480469 18.816406 139.851562 18.519531 139.667969 18.519531 C 139.480469 18.519531 138 17.925781 136.445312 17.222656 C 131.742188 15.074219 124.371094 12.554688 120.742188 11.890625 C 119.816406 11.703125 118.59375 11.371094 117.964844 11.148438 C 116.816406 10.777344 110.183594 9.964844 102.554688 9.257812 C 98.332031 8.890625 97.742188 8.890625 94.445312 9.148438 Z M 94.445312 9.148438 \"/>\n<path style=\" stroke:none;fill-rule:nonzero;fill:rgb(41.568627%,65.882353%,30.980392%);fill-opacity:1;\" d=\"M 65.554688 15.554688 C 65.257812 15.742188 64 16.257812 62.742188 16.667969 C 61.480469 17.074219 59.851562 17.742188 59.035156 18.148438 C 58.257812 18.554688 57.40625 18.890625 57.148438 18.890625 C 56.890625 18.890625 56.667969 19.074219 56.667969 19.257812 C 56.667969 19.480469 55.40625 20.222656 53.851562 20.964844 C 51.519531 22.035156 45.667969 25.703125 43.816406 27.222656 C 43.554688 27.40625 42.59375 28.183594 41.628906 28.890625 C 36.480469 32.742188 28.519531 40.480469 25.257812 44.816406 C 23.554688 47.109375 20.703125 51.40625 19.074219 54.109375 C 17.332031 57.035156 13.703125 64.296875 13.703125 64.890625 C 13.703125 65.222656 13.445312 65.742188 13.148438 66.074219 C 12.851562 66.371094 12.59375 66.742188 12.59375 66.925781 C 12.59375 67.074219 12.035156 69.035156 11.332031 71.296875 C 9.480469 77.148438 8.890625 79.371094 8.890625 80.445312 C 8.890625 80.925781 8.667969 82.074219 8.371094 83 C 7.777344 84.851562 6.964844 92.371094 6.851562 96.851562 C 6.742188 101.59375 7.667969 112.480469 8.480469 115.554688 C 8.703125 116.480469 9.332031 119.035156 9.851562 121.296875 C 10.371094 123.519531 10.964844 125.667969 11.183594 126.074219 C 11.40625 126.445312 11.851562 127.816406 12.222656 129.109375 C 13.148438 132.371094 17.40625 141.371094 18.816406 143.109375 C 19.296875 143.742188 19.851562 144.59375 20.035156 145.035156 C 20.371094 146 22.628906 149.40625 25.296875 152.964844 C 26.925781 155.183594 32.816406 161.371094 36.742188 165.035156 C 40.59375 168.628906 48.222656 174.183594 51.851562 176.035156 C 54.445312 177.371094 55.371094 177.890625 55.554688 178.183594 C 55.667969 178.332031 56.59375 178.777344 57.59375 179.183594 C 58.628906 179.59375 60.183594 180.371094 61.109375 180.890625 C 62.035156 181.40625 63.109375 181.851562 63.519531 181.851562 C 63.925781 181.851562 64.851562 182.148438 65.554688 182.519531 C 68.964844 184.332031 72.816406 185 70.371094 183.371094 C 69.148438 182.554688 64.667969 178.742188 62.519531 176.667969 C 59.964844 174.183594 55.742188 169.148438 53.703125 166.074219 C 52.667969 164.59375 51.703125 163.296875 51.480469 163.148438 C 51.296875 163.035156 50.742188 162.148438 50.257812 161.183594 C 49.777344 160.222656 48.890625 158.445312 48.257812 157.222656 C 46.554688 154 44.816406 150.109375 44.816406 149.554688 C 44.816406 149.296875 44.554688 148.554688 44.222656 147.964844 C 43.703125 147 43.148438 145.40625 41.851562 141.257812 C 41.628906 140.628906 41.480469 139.742188 41.480469 139.222656 C 41.480469 138.742188 41.257812 137.59375 40.925781 136.667969 C 40.628906 135.742188 40.148438 133.40625 39.816406 131.480469 C 38.777344 125.445312 39.40625 107.148438 40.742188 104.742188 C 40.925781 104.40625 41.183594 103.40625 41.296875 102.519531 C 41.554688 100.59375 43.148438 95.183594 44.074219 93.148438 C 44.445312 92.332031 44.851562 91.296875 45 90.816406 C 45.667969 88.519531 50.742188 78.667969 51.628906 77.964844 C 51.851562 77.742188 52.40625 77.074219 52.777344 76.40625 C 54.703125 73.371094 56.628906 70.816406 59.925781 67.074219 C 64.109375 62.332031 65.925781 60.074219 65.925781 59.59375 C 65.925781 59.40625 66.371094 58.554688 66.890625 57.703125 C 67.40625 56.890625 68.183594 55.257812 68.554688 54.148438 C 68.925781 53.035156 69.445312 51.925781 69.628906 51.667969 C 69.851562 51.40625 70.109375 50.296875 70.222656 49.222656 C 70.371094 47.519531 70.332031 47.371094 69.964844 48.148438 C 66.703125 55.257812 64.890625 58.109375 61.222656 61.742188 C 59.148438 63.816406 58.703125 64.074219 57.445312 64.074219 C 56.035156 64.074219 55.964844 64 55.371094 62.296875 C 55.035156 61.332031 54.59375 60.148438 54.40625 59.703125 C 52.851562 55.816406 52.59375 54.332031 52.59375 50.109375 C 52.59375 46.074219 52.703125 45.445312 53.851562 42.183594 C 55.257812 38.148438 57.222656 34.332031 59.777344 30.628906 C 60.703125 29.257812 61.480469 28.074219 61.480469 27.964844 C 61.480469 27.890625 61.964844 27.109375 62.554688 26.222656 C 64.371094 23.480469 65.445312 21.332031 66.296875 18.667969 C 66.777344 17.257812 67.332031 15.890625 67.519531 15.628906 C 67.964844 15.074219 66.40625 15 65.554688 15.554688 Z M 65.554688 15.554688 \"/>\n</g>\n</svg>\n      </svg>`\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: var(--ha-icon-display, inline-flex);\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        vertical-align: middle;\n        fill: currentcolor;\n        width: var(--mdc-icon-size, 24px);\n        height: var(--mdc-icon-size, 24px);\n      }\n      svg {\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n        display: block;\n      }\n    `;\n  }\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-logo-svg\": HaLogoSvg;\n  }\n}\n","import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { property } from \"lit/decorators\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport \"../../../components/ha-logo-svg\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { configSections } from \"../ha-panel-config\";\nimport \"./integrations-card\";\nimport \"./system-health-card\";\n\nconst JS_TYPE = __BUILD__;\nconst JS_VERSION = __VERSION__;\n\nclass HaConfigInfo extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public narrow!: boolean;\n\n  @property() public isWide!: boolean;\n\n  @property() public showAdvanced!: boolean;\n\n  @property() public route!: Route;\n\n  protected render(): TemplateResult {\n    const hass = this.hass;\n    const customUiList: Array<{ name: string; url: string; version: string }> =\n      (window as any).CUSTOM_UI_LIST || [];\n\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        back-path=\"/config\"\n        .route=${this.route}\n        .tabs=${configSections.general}\n      >\n        <div class=\"about\">\n          <a\n            href=${documentationUrl(this.hass, \"\")}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <ha-logo-svg\n              title=${this.hass.localize(\n                \"ui.panel.config.info.home_assistant_logo\"\n              )}\n            >\n            </ha-logo-svg>\n          </a>\n          <br />\n          <h2>Vioneta Agro ${hass.connection.haVersion}</h2>\n          <!-- <p>\n            ${this.hass.localize(\n              \"ui.panel.config.info.path_configuration\",\n              \"path\",\n              hass.config.config_dir\n            )}\n          </p> -->\n          <p class=\"develop\">\n            <a\n              href=${documentationUrl(this.hass, \"/developers/credits/\")}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              ${this.hass.localize(\"ui.panel.config.info.developed_by\")}\n            </a>\n          </p>\n          <!-- <p>\n            ${this.hass.localize(\"ui.panel.config.info.license\")}<br />\n            ${this.hass.localize(\"ui.panel.config.info.source\")}\n            <a\n              href=\"https://github.com/home-assistant/core\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >${this.hass.localize(\"ui.panel.config.info.server\")}</a\n            >\n            &mdash;\n            <a\n              href=\"https://github.com/home-assistant/frontend\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >${this.hass.localize(\"ui.panel.config.info.frontend\")}</a\n            >\n          </p> -->\n          <p>\n            ${this.hass.localize(\"ui.panel.config.info.built_using\")}\n            <a href=\"https://www.python.org\" target=\"_blank\" rel=\"noreferrer\"\n              >Python 3</a\n            >,\n            <a href=\"https://lit.dev\" target=\"_blank\" rel=\"noreferrer\">Lit</a>,\n            ${this.hass.localize(\"ui.panel.config.info.icons_by\")}\n            <a\n              href=\"https://fonts.google.com/icons?selected=Material+Icons\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >Google</a\n            >\n            ${this.hass.localize(\"ui.common.and\")}\n            <a\n              href=\"https://materialdesignicons.com/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              >Material Design Icons</a\n            >.\n          </p>\n          <p>\n            ${this.hass.localize(\n              \"ui.panel.config.info.frontend_version\",\n              \"version\",\n              JS_VERSION,\n              \"type\",\n              JS_TYPE\n            )}\n            ${customUiList.length > 0\n              ? html`\n                  <div>\n                    ${this.hass.localize(\"ui.panel.config.info.custom_uis\")}\n                    ${customUiList.map(\n                      (item) => html`\n                        <div>\n                          <a href=${item.url} target=\"_blank\"> ${item.name}</a>:\n                          ${item.version}\n                        </div>\n                      `\n                    )}\n                  </div>\n                `\n              : \"\"}\n          </p>\n        </div>\n        <div>\n          <!-- <system-health-card .hass=${this.hass}></system-health-card>\n          <integrations-card\n            .hass=${this.hass}\n            .narrow=${this.narrow}\n          ></integrations-card> -->\n        </div>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n\n    // Legacy custom UI can be slow to register, give them time.\n    const customUI = ((window as any).CUSTOM_UI_LIST || []).length;\n    setTimeout(() => {\n      if (((window as any).CUSTOM_UI_LIST || []).length !== customUI.length) {\n        this.requestUpdate();\n      }\n    }, 1000);\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .about {\n          text-align: center;\n          line-height: 2em;\n        }\n\n        .version {\n          @apply --paper-font-headline;\n        }\n\n        .develop {\n          @apply --paper-font-subhead;\n        }\n\n        .about a {\n          color: var(--primary-color);\n        }\n\n        system-health-card,\n        integrations-card {\n          display: block;\n          max-width: 600px;\n          margin: 0 auto;\n          padding-bottom: 16px;\n        }\n        ha-logo-svg {\n          padding: 12px;\n          height: 180px;\n          width: 180px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-info\": HaConfigInfo;\n  }\n}\n\ncustomElements.define(\"ha-config-info\", HaConfigInfo);\n","import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../components/ha-card\";\nimport {\n  domainToName,\n  fetchIntegrationManifests,\n  fetchIntegrationSetups,\n  integrationIssuesUrl,\n  IntegrationManifest,\n  IntegrationSetup,\n} from \"../../../data/integration\";\nimport { HomeAssistant } from \"../../../types\";\nimport { brandsUrl } from \"../../../util/brands-url\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\n\n@customElement(\"integrations-card\")\nclass IntegrationsCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @state() private _manifests?: {\n    [domain: string]: IntegrationManifest;\n  };\n\n  @state() private _setups?: {\n    [domain: string]: IntegrationSetup;\n  };\n\n  private _sortedIntegrations = memoizeOne((components: string[]) =>\n    Array.from(\n      new Set(\n        components.map((comp) =>\n          comp.includes(\".\") ? comp.split(\".\")[1] : comp\n        )\n      )\n    ).sort()\n  );\n\n  firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchManifests();\n    this._fetchSetups();\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-card\n        .header=${this.hass.localize(\"ui.panel.config.info.integrations\")}\n      >\n        <table class=\"card-content\">\n          <thead>\n            <tr>\n              <th></th>\n              ${!this.narrow\n                ? html`<th></th>\n                    <th></th>\n                    <th></th>`\n                : \"\"}\n              <th>${this.hass.localize(\"ui.panel.config.info.setup_time\")}</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${this._sortedIntegrations(this.hass!.config.components).map(\n              (domain) => {\n                const manifest = this._manifests && this._manifests[domain];\n                const docLink = manifest\n                  ? html`<a\n                      href=${manifest.is_built_in\n                        ? documentationUrl(\n                            this.hass,\n                            `/integrations/${manifest.domain}`\n                          )\n                        : manifest.documentation}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      >${this.hass.localize(\n                        \"ui.panel.config.info.documentation\"\n                      )}</a\n                    >`\n                  : \"\";\n                const issueLink =\n                  manifest && (manifest.is_built_in || manifest.issue_tracker)\n                    ? html`\n                        <a\n                          href=${integrationIssuesUrl(domain, manifest)}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                          >${this.hass.localize(\n                            \"ui.panel.config.info.issues\"\n                          )}</a\n                        >\n                      `\n                    : \"\";\n                const setupSeconds =\n                  this._setups?.[domain]?.seconds?.toFixed(2);\n                return html`\n                  <tr>\n                    <td>\n                      <img\n                        loading=\"lazy\"\n                        src=${brandsUrl({\n                          domain: domain,\n                          type: \"icon\",\n                          useFallback: true,\n                          darkOptimized: this.hass.themes?.darkMode,\n                        })}\n                        referrerpolicy=\"no-referrer\"\n                      />\n                    </td>\n                    <td class=\"name\">\n                      ${domainToName(\n                        this.hass.localize,\n                        domain,\n                        manifest\n                      )}<br />\n                      <span class=\"domain\">${domain}</span>\n                      ${this.narrow\n                        ? html`<div class=\"mobile-row\">\n                            <div>${docLink} ${issueLink}</div>\n                            ${setupSeconds ? html`${setupSeconds} s` : \"\"}\n                          </div>`\n                        : \"\"}\n                    </td>\n                    ${this.narrow\n                      ? \"\"\n                      : html`\n                          <td>${docLink}</td>\n                          <td>${issueLink}</td>\n                          <td class=\"setup\">\n                            ${setupSeconds ? html`${setupSeconds} s` : \"\"}\n                          </td>\n                        `}\n                  </tr>\n                `;\n              }\n            )}\n          </tbody>\n        </table>\n      </ha-card>\n    `;\n  }\n\n  private async _fetchManifests() {\n    const manifests = {};\n    for (const manifest of await fetchIntegrationManifests(this.hass)) {\n      manifests[manifest.domain] = manifest;\n    }\n    this._manifests = manifests;\n  }\n\n  private async _fetchSetups() {\n    const setups = {};\n    for (const setup of await fetchIntegrationSetups(this.hass)) {\n      setups[setup.domain] = setup;\n    }\n    this._setups = setups;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      table {\n        width: 100%;\n      }\n      td,\n      th {\n        padding: 0 8px;\n      }\n      td:first-child {\n        padding-left: 0;\n      }\n      td.name {\n        padding: 8px;\n      }\n      td.setup {\n        text-align: right;\n        white-space: nowrap;\n        direction: ltr;\n      }\n      th {\n        text-align: right;\n      }\n      .domain {\n        color: var(--secondary-text-color);\n      }\n      .mobile-row {\n        display: flex;\n        justify-content: space-between;\n      }\n      .mobile-row a:not(:last-of-type) {\n        margin-right: 4px;\n      }\n      img {\n        display: block;\n        max-height: 40px;\n        max-width: 40px;\n      }\n      a {\n        color: var(--primary-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"integrations-card\": IntegrationsCard;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport { ActionDetail } from \"@material/mwc-list/mwc-list-foundation\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport { mdiContentCopy } from \"@mdi/js\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { formatDateTime } from \"../../../common/datetime/format_date_time\";\nimport { copyToClipboard } from \"../../../common/util/copy-clipboard\";\nimport \"../../../components/ha-button-menu\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-circular-progress\";\nimport \"../../../components/ha-icon-button\";\nimport { domainToName } from \"../../../data/integration\";\nimport {\n  subscribeSystemHealthInfo,\n  SystemCheckValueObject,\n  SystemHealthInfo,\n} from \"../../../data/system_health\";\nimport { HomeAssistant } from \"../../../types\";\nimport { showToast } from \"../../../util/toast\";\n\nconst sortKeys = (a: string, b: string) => {\n  if (a === \"homeassistant\") {\n    return -1;\n  }\n  if (b === \"homeassistant\") {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  if (b < a) {\n    return 1;\n  }\n  return 0;\n};\n\nclass SystemHealthCard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _info?: SystemHealthInfo;\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n    const sections: TemplateResult[] = [];\n\n    if (!this._info) {\n      sections.push(\n        html`\n          <div class=\"loading-container\">\n            <ha-circular-progress active></ha-circular-progress>\n          </div>\n        `\n      );\n    } else {\n      const domains = Object.keys(this._info).sort(sortKeys);\n      for (const domain of domains) {\n        const domainInfo = this._info[domain];\n        const keys: TemplateResult[] = [];\n\n        for (const key of Object.keys(domainInfo.info)) {\n          let value: unknown;\n\n          if (\n            domainInfo.info[key] &&\n            typeof domainInfo.info[key] === \"object\"\n          ) {\n            const info = domainInfo.info[key] as SystemCheckValueObject;\n\n            if (info.type === \"pending\") {\n              value = html`\n                <ha-circular-progress active size=\"tiny\"></ha-circular-progress>\n              `;\n            } else if (info.type === \"failed\") {\n              value = html`\n                <span class=\"error\">${info.error}</span>${!info.more_info\n                  ? \"\"\n                  : html`\n                      –\n                      <a\n                        href=${info.more_info}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        ${this.hass.localize(\n                          \"ui.panel.config.info.system_health.more_info\"\n                        )}\n                      </a>\n                    `}\n              `;\n            } else if (info.type === \"date\") {\n              value = formatDateTime(new Date(info.value), this.hass.locale);\n            }\n          } else {\n            value = domainInfo.info[key];\n          }\n\n          keys.push(html`\n            <tr>\n              <td>\n                ${this.hass.localize(\n                  `component.${domain}.system_health.info.${key}`\n                ) || key}\n              </td>\n              <td>${value}</td>\n            </tr>\n          `);\n        }\n        if (domain !== \"homeassistant\") {\n          sections.push(\n            html`\n              <div class=\"card-header\">\n                <h3>${domainToName(this.hass.localize, domain)}</h3>\n                ${!domainInfo.manage_url\n                  ? \"\"\n                  : html`\n                      <a class=\"manage\" href=${domainInfo.manage_url}>\n                        <mwc-button>\n                          ${this.hass.localize(\n                            \"ui.panel.config.info.system_health.manage\"\n                          )}\n                        </mwc-button>\n                      </a>\n                    `}\n              </div>\n            `\n          );\n        }\n        sections.push(html`\n          <table>\n            ${keys}\n          </table>\n        `);\n      }\n    }\n\n    return html`\n      <ha-card>\n        <h1 class=\"card-header\">\n          <div class=\"card-header-text\">\n            ${domainToName(this.hass.localize, \"system_health\")}\n          </div>\n          <ha-button-menu\n            corner=\"BOTTOM_START\"\n            slot=\"toolbar-icon\"\n            @action=${this._copyInfo}\n          >\n            <ha-icon-button\n              slot=\"trigger\"\n              .label=${this.hass.localize(\"ui.panel.config.info.copy_menu\")}\n              .path=${mdiContentCopy}\n            ></ha-icon-button>\n            <mwc-list-item>\n              ${this.hass.localize(\"ui.panel.config.info.copy_raw\")}\n            </mwc-list-item>\n            <mwc-list-item>\n              ${this.hass.localize(\"ui.panel.config.info.copy_github\")}\n            </mwc-list-item>\n          </ha-button-menu>\n        </h1>\n        <div class=\"card-content\">${sections}</div>\n      </ha-card>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n\n    this.hass!.loadBackendTranslation(\"system_health\");\n\n    if (!isComponentLoaded(this.hass!, \"system_health\")) {\n      this._info = {\n        system_health: {\n          info: {\n            error: this.hass.localize(\n              \"ui.panel.config.info.system_health_error\"\n            ),\n          },\n        },\n      };\n      return;\n    }\n\n    subscribeSystemHealthInfo(this.hass!, (info) => {\n      this._info = info;\n    });\n  }\n\n  private async _copyInfo(ev: CustomEvent<ActionDetail>): Promise<void> {\n    const github = ev.detail.index === 1;\n    let haContent: string | undefined;\n    const domainParts: string[] = [];\n\n    for (const domain of Object.keys(this._info!).sort(sortKeys)) {\n      const domainInfo = this._info![domain];\n      let first = true;\n      const parts = [\n        `${\n          github && domain !== \"homeassistant\"\n            ? `<details><summary>${domainToName(\n                this.hass.localize,\n                domain\n              )}</summary>\\n`\n            : \"\"\n        }`,\n      ];\n\n      for (const key of Object.keys(domainInfo.info)) {\n        let value: unknown;\n\n        if (typeof domainInfo.info[key] === \"object\") {\n          const info = domainInfo.info[key] as SystemCheckValueObject;\n\n          if (info.type === \"pending\") {\n            value = \"pending\";\n          } else if (info.type === \"failed\") {\n            value = `failed to load: ${info.error}`;\n          } else if (info.type === \"date\") {\n            value = formatDateTime(new Date(info.value), this.hass.locale);\n          }\n        } else {\n          value = domainInfo.info[key];\n        }\n        if (github && first) {\n          parts.push(`${key} | ${value}\\n-- | --`);\n          first = false;\n        } else {\n          parts.push(`${key}${github ? \" | \" : \": \"}${value}`);\n        }\n      }\n\n      if (domain === \"homeassistant\") {\n        haContent = parts.join(\"\\n\");\n      } else {\n        domainParts.push(parts.join(\"\\n\"));\n        if (github && domain !== \"homeassistant\") {\n          domainParts.push(\"</details>\");\n        }\n      }\n    }\n\n    await copyToClipboard(\n      `${github ? \"## \" : \"\"}System Health\\n${haContent}\\n\\n${domainParts.join(\n        \"\\n\\n\"\n      )}`\n    );\n\n    showToast(this, {\n      message: this.hass.localize(\"ui.common.copied_clipboard\"),\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      table {\n        width: 100%;\n      }\n\n      td:first-child {\n        width: 45%;\n      }\n\n      td:last-child {\n        direction: ltr;\n      }\n\n      .loading-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .card-header {\n        justify-content: space-between;\n        display: flex;\n        align-items: center;\n      }\n\n      .error {\n        color: var(--error-color);\n      }\n\n      a {\n        color: var(--primary-color);\n      }\n\n      a.manage {\n        text-decoration: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"system-health-card\", SystemHealthCard);\n"],"names":[],"sourceRoot":""}
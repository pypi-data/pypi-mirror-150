{"version":3,"file":"0d67740b.js","mappings":";;AAoDA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;AAKA;;;AAKA;AAEA;;;AAKA;AAGA;;;AAoCA;;AAIA;AACA;;;;AAMA;;AA/CA;;;;AAKA;;;;AAAA;AAEA;;;;AAKA;AAGA;;;AAIA;;AAEA;;;;;;AA8BA;;;AAIA;;;AAKA;;;;;AAOA;;;AAGA;AAGA;;;;;AAOA;;AAGA;;;AAKA;;;;AAMA;;;AAGA;;;AAKA;;AAIA;AACA;;AAEA;;;;AAYA;;;AAzLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA","sources":["webpack://home-assistant-frontend/./src/panels/config/server_control/ha-config-server-control.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { componentsWithService } from \"../../../common/config/components_with_service\";\nimport \"../../../components/buttons/ha-call-service-button\";\nimport \"../../../components/ha-card\";\nimport { checkCoreConfig } from \"../../../data/core\";\nimport { domainToName } from \"../../../data/integration\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\n\n@customElement(\"ha-config-server-control\")\nexport class HaConfigServerControl extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public isWide!: boolean;\n\n  @property() public narrow!: boolean;\n\n  @property() public route!: Route;\n\n  @property() public showAdvanced!: boolean;\n\n  @state() private _validating = false;\n\n  @state() private _reloadableDomains: string[] = [];\n\n  private _validateLog = \"\";\n\n  private _isValid: boolean | null = null;\n\n  protected updated(changedProperties) {\n    const oldHass = changedProperties.get(\"hass\");\n    if (\n      changedProperties.has(\"hass\") &&\n      (!oldHass || oldHass.config.components !== this.hass.config.components)\n    ) {\n      this._reloadableDomains = componentsWithService(\n        this.hass,\n        \"reload\"\n      ).sort();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        back-path=\"/config\"\n        .tabs=${configSections.general}\n        .showAdvanced=${this.showAdvanced}\n      >\n        <ha-config-section .isWide=${this.isWide}>\n          <span slot=\"header\"\n            >${this.hass.localize(\n              \"ui.panel.config.server_control.caption\"\n            )}</span\n          >\n          <span slot=\"introduction\"\n            >${this.hass.localize(\n              \"ui.panel.config.server_control.description\"\n            )}</span\n          >\n\n          ${this.showAdvanced\n            ? html` <ha-card\n                header=${this.hass.localize(\n                  \"ui.panel.config.server_control.section.validation.heading\"\n                )}\n              >\n                <div class=\"card-content\">\n                  ${this.hass.localize(\n                    \"ui.panel.config.server_control.section.validation.introduction\"\n                  )}\n                  ${!this._validateLog\n                    ? html`\n                        <div\n                          class=\"validate-container layout vertical center-center\"\n                        >\n                          ${!this._validating\n                            ? html`\n                                ${this._isValid\n                                  ? html` <div\n                                      class=\"validate-result\"\n                                      id=\"result\"\n                                    >\n                                      ${this.hass.localize(\n                                        \"ui.panel.config.server_control.section.validation.valid\"\n                                      )}\n                                    </div>`\n                                  : \"\"}\n                                <mwc-button\n                                  raised\n                                  @click=${this._validateConfig}\n                                >\n                                  ${this.hass.localize(\n                                    \"ui.panel.config.server_control.section.validation.check_config\"\n                                  )}\n                                </mwc-button>\n                              `\n                            : html`\n                                <ha-circular-progress\n                                  active\n                                ></ha-circular-progress>\n                              `}\n                        </div>\n                      `\n                    : html`\n                        <div class=\"config-invalid\">\n                          <span class=\"text\">\n                            ${this.hass.localize(\n                              \"ui.panel.config.server_control.section.validation.invalid\"\n                            )}\n                          </span>\n                          <mwc-button raised @click=${this._validateConfig}>\n                            ${this.hass.localize(\n                              \"ui.panel.config.server_control.section.validation.check_config\"\n                            )}\n                          </mwc-button>\n                        </div>\n                        <div id=\"configLog\" class=\"validate-log\">\n                          ${this._validateLog}\n                        </div>\n                      `}\n                </div>\n              </ha-card>`\n            : \"\"}\n\n          <ha-card\n            header=${this.hass.localize(\n              \"ui.panel.config.server_control.section.server_management.heading\"\n            )}\n          >\n            <div class=\"card-content\">\n              ${this.hass.localize(\n                \"ui.panel.config.server_control.section.server_management.introduction\"\n              )}\n            </div>\n            <div class=\"card-actions warning\">\n              <ha-call-service-button\n                class=\"warning\"\n                .hass=${this.hass}\n                domain=\"homeassistant\"\n                service=\"restart\"\n                .confirmation=${this.hass.localize(\n                  \"ui.panel.config.server_control.section.server_management.confirm_restart\"\n                )}\n                >${this.hass.localize(\n                  \"ui.panel.config.server_control.section.server_management.restart\"\n                )}\n              </ha-call-service-button>\n            </div>\n          </ha-card>\n\n          ${this.showAdvanced\n            ? html`\n                <ha-card\n                  header=${this.hass.localize(\n                    \"ui.panel.config.server_control.section.reloading.heading\"\n                  )}\n                >\n                  <div class=\"card-content\">\n                    ${this.hass.localize(\n                      \"ui.panel.config.server_control.section.reloading.introduction\"\n                    )}\n                  </div>\n                  <div class=\"card-actions\">\n                    <ha-call-service-button\n                      .hass=${this.hass}\n                      domain=\"homeassistant\"\n                      service=\"reload_core_config\"\n                      >${this.hass.localize(\n                        \"ui.panel.config.server_control.section.reloading.core\"\n                      )}\n                    </ha-call-service-button>\n                  </div>\n                  ${this._reloadableDomains.map(\n                    (domain) =>\n                      html`<div class=\"card-actions\">\n                        <ha-call-service-button\n                          .hass=${this.hass}\n                          .domain=${domain}\n                          service=\"reload\"\n                          >${this.hass.localize(\n                            `ui.panel.config.server_control.section.reloading.${domain}`\n                          ) ||\n                          this.hass.localize(\n                            \"ui.panel.config.server_control.section.reloading.reload\",\n                            \"domain\",\n                            domainToName(this.hass.localize, domain)\n                          )}\n                        </ha-call-service-button>\n                      </div>`\n                  )}\n                </ha-card>\n              `\n            : \"\"}\n        </ha-config-section>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  private async _validateConfig() {\n    this._validating = true;\n    this._validateLog = \"\";\n    this._isValid = null;\n\n    const configCheck = await checkCoreConfig(this.hass);\n    this._validating = false;\n    this._isValid = configCheck.result === \"valid\";\n\n    if (configCheck.errors) {\n      this._validateLog = configCheck.errors;\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .validate-container {\n          height: 140px;\n        }\n\n        .validate-result {\n          color: var(--success-color);\n          font-weight: 500;\n          margin-bottom: 1em;\n        }\n\n        .config-invalid {\n          margin: 1em 0;\n        }\n\n        .config-invalid .text {\n          color: var(--error-color);\n          font-weight: 500;\n        }\n\n        .config-invalid mwc-button {\n          float: right;\n        }\n\n        .validate-log {\n          white-space: pre-line;\n          direction: ltr;\n        }\n\n        ha-config-section {\n          padding-bottom: 24px;\n        }\n      `,\n    ];\n  }\n}\n"],"names":[],"sourceRoot":""}
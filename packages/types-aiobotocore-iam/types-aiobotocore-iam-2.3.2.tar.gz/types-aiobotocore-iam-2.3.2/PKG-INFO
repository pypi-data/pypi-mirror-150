Metadata-Version: 2.1
Name: types-aiobotocore-iam
Version: 2.3.2
Summary: Type annotations for aiobotocore.IAM 2.3.2 service generated with mypy-boto3-builder 7.5.14
Home-page: https://github.com/youtype/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/youtype/mypy_boto3_builder
Project-URL: Tracker, https://github.com/youtype/mypy_boto3_builder/issues
Keywords: aiobotocore iam type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown

<a id="types-aiobotocore-iam"></a>

# types-aiobotocore-iam

[![PyPI - types-aiobotocore-iam](https://img.shields.io/pypi/v/types-aiobotocore-iam.svg?color=blue)](https://pypi.org/project/types-aiobotocore-iam)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-iam.svg?color=blue)](https://pypi.org/project/types-aiobotocore-iam)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-iam?color=blue)](https://pypistats.org/packages/types-aiobotocore-iam)

![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[aiobotocore.IAM 2.3.2](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/iam.html#IAM)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 7.5.14](https://github.com/youtype/mypy_boto3_builder).

More information can be found on
[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in
[types-aiobotocore-iam docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_iam/)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)

- [types-aiobotocore-iam](#types-aiobotocore-iam)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [How to uninstall](#how-to-uninstall)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Emacs](#emacs)
    - [Sublime Text](#sublime-text)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)
    - [Service Resource annotations](#service-resource-annotations)
    - [Other resources annotations](#other-resources-annotations)
    - [Collections annotations](#collections-annotations)
    - [Literals](#literals)
    - [Typed dictionaries](#typed-dictionaries)
  - [How it works](#how-it-works)
  - [What's new](#what's-new)
    - [Implemented features](#implemented-features)
    - [Latest changes](#latest-changes)
  - [Versioning](#versioning)
  - [Thank you](#thank-you)
  - [Documentation](#documentation)
  - [Support and contributing](#support-and-contributing)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `IAM`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `IAM` service.

```bash
# install with aiobotocore type annotations
python -m pip install 'types-aiobotocore[iam]'


# Lite version does not provide session.client/resource overloads
# it is more RAM-friendly, but requires explicit type annotations
python -m pip install 'types-aiobotocore-lite[iam]'


# standalone installation
python -m pip install types-aiobotocore-iam
```

<a id="how-to-uninstall"></a>

## How to uninstall

```bash
python -m pip uninstall -y types-aiobotocore-iam
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[iam]` in your environment:

```bash
python -m pip install 'types-aiobotocore[iam]'
```

Both type checking and code completion should now work. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="pycharm"></a>

### PyCharm

Install `types-aiobotocore-lite[iam]` in your environment:

```bash
python -m pip install 'types-aiobotocore-lite[iam]'`
```

Both type checking and code completion should now work. Explicit type
annotations **are required**.

Use `types-aiobotocore` package instead for implicit type discovery.

<a id="emacs"></a>

### Emacs

- Install `types-aiobotocore` with services you use in your environment:

```bash
python -m pip install 'types-aiobotocore[iam]'
```

- Install [use-package](https://github.com/jwiegley/use-package),
  [lsp](https://github.com/emacs-lsp/lsp-mode/),
  [company](https://github.com/company-mode/company-mode) and
  [flycheck](https://github.com/flycheck/flycheck) packages
- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package

```elisp
(use-package lsp-pyright
  :ensure t
  :hook (python-mode . (lambda ()
                          (require 'lsp-pyright)
                          (lsp)))  ; or lsp-deferred
  :init (when (executable-find "python3")
          (setq lsp-pyright-python-executable-cmd "python3"))
  )
```

- Make sure emacs uses the environment where you have installed
  `types-aiobotocore`

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="sublime-text"></a>

### Sublime Text

- Install `types-aiobotocore[iam]` with services you use in your environment:

```bash
python -m pip install 'types-aiobotocore[iam]'
```

- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[iam]` in your environment:

```bash
python -m pip install 'types-aiobotocore[iam]'`
```

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `npm i -g pyright`
- Install `types-aiobotocore[iam]` in your environment:

```bash
python -m pip install 'types-aiobotocore[iam]'
```

Optionally, you can install `types-aiobotocore` to `typings` folder.

Type checking should now work. No explicit type annotations required, write
your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`IAMClient` provides annotations for `session.create_client("iam")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_iam import IAMClient

session = get_session()
async with session.create_client("iam") as client:
    client: IAMClient
    # now client usage is checked by mypy and IDE should provide code completion
```

<a id="paginators-annotations"></a>

### Paginators annotations

`types_aiobotocore_iam.paginator` module contains type annotations for all
paginators.

````python
from aiobotocore.session import get_session

from types_aiobotocore_iam import IAMClient
from types_aiobotocore_iam.paginator import (
    GetAccountAuthorizationDetailsPaginator,
    GetGroupPaginator,
    ListAccessKeysPaginator,
    ListAccountAliasesPaginator,
    ListAttachedGroupPoliciesPaginator,
    ListAttachedRolePoliciesPaginator,
    ListAttachedUserPoliciesPaginator,
    ListEntitiesForPolicyPaginator,
    ListGroupPoliciesPaginator,
    ListGroupsPaginator,
    ListGroupsForUserPaginator,
    ListInstanceProfilesPaginator,
    ListInstanceProfilesForRolePaginator,
    ListMFADevicesPaginator,
    ListPoliciesPaginator,
    ListPolicyVersionsPaginator,
    ListRolePoliciesPaginator,
    ListRolesPaginator,
    ListSSHPublicKeysPaginator,
    ListServerCertificatesPaginator,
    ListSigningCertificatesPaginator,
    ListUserPoliciesPaginator,
    ListUserTagsPaginator,
    ListUsersPaginator,
    ListVirtualMFADevicesPaginator,
    SimulateCustomPolicyPaginator,
    SimulatePrincipalPolicyPaginator,
)

session = get_session()
async with session.create_client("iam") as client:
    client: IAMClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        get_account_authorization_details_paginator: GetAccountAuthorizationDetailsPaginator = client.get_paginator("get_account_authorization_details")
        get_group_paginator: GetGroupPaginator = client.get_paginator("get_group")
        list_access_keys_paginator: ListAccessKeysPaginator = client.get_paginator("list_access_keys")
        list_account_aliases_paginator: ListAccountAliasesPaginator = client.get_paginator("list_account_aliases")
        list_attached_group_policies_paginator: ListAttachedGroupPoliciesPaginator = client.get_paginator("list_attached_group_policies")
        list_attached_role_policies_paginator: ListAttachedRolePoliciesPaginator = client.get_paginator("list_attached_role_policies")
        list_attached_user_policies_paginator: ListAttachedUserPoliciesPaginator = client.get_paginator("list_attached_user_policies")
        list_entities_for_policy_paginator: ListEntitiesForPolicyPaginator = client.get_paginator("list_entities_for_policy")
        list_group_policies_paginator: ListGroupPoliciesPaginator = client.get_paginator("list_group_policies")
        list_groups_paginator: ListGroupsPaginator = client.get_paginator("list_groups")
        list_groups_for_user_paginator: ListGroupsForUserPaginator = client.get_paginator("list_groups_for_user")
        list_instance_profiles_paginator: ListInstanceProfilesPaginator = client.get_paginator("list_instance_profiles")
        list_instance_profiles_for_role_paginator: ListInstanceProfilesForRolePaginator = client.get_paginator("list_instance_profiles_for_role")
        list_mfa_devices_paginator: ListMFADevicesPaginator = client.get_paginator("list_mfa_devices")
        list_policies_paginator: ListPoliciesPaginator = client.get_paginator("list_policies")
        list_policy_versions_paginator: ListPolicyVersionsPaginator = client.get_paginator("list_policy_versions")
        list_role_policies_paginator: ListRolePoliciesPaginator = client.get_paginator("list_role_policies")
        list_roles_paginator: ListRolesPaginator = client.get_paginator("list_roles")
        list_ssh_public_keys_paginator: ListSSHPublicKeysPaginator = client.get_paginator("list_ssh_public_keys")
        list_server_certificates_paginator: ListServerCertificatesPaginator = client.get_paginator("list_server_certificates")
        list_signing_certificates_paginator: ListSigningCertificatesPaginator = client.get_paginator("list_signing_certificates")
        list_user_policies_paginator: ListUserPoliciesPaginator = client.get_paginator("list_user_policies")
        list_user_tags_paginator: ListUserTagsPaginator = client.get_paginator("list_user_tags")
        list_users_paginator: ListUsersPaginator = client.get_paginator("list_users")
        list_virtual_mfa_devices_paginator: ListVirtualMFADevicesPaginator = client.get_paginator("list_virtual_mfa_devices")
        simulate_custom_policy_paginator: SimulateCustomPolicyPaginator = client.get_paginator("simulate_custom_policy")
        simulate_principal_policy_paginator: SimulatePrincipalPolicyPaginator = client.get_paginator("simulate_principal_policy")
    ```


### Waiters annotations

`types_aiobotocore_iam.waiter` module contains type annotations for all waiters.

```python
from aiobotocore.session import get_session

from types_aiobotocore_iam.client import IAMClient
from types_aiobotocore_iam.waiter import (
    InstanceProfileExistsWaiter,
    PolicyExistsWaiter,
    RoleExistsWaiter,
    UserExistsWaiter,
)

session = get_session()
async with session.create_client("iam") as client:
    client: IAMClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        instance_profile_exists_waiter: InstanceProfileExistsWaiter = client.get_waiter("instance_profile_exists")
        policy_exists_waiter: PolicyExistsWaiter = client.get_waiter("policy_exists")
        role_exists_waiter: RoleExistsWaiter = client.get_waiter("role_exists")
        user_exists_waiter: UserExistsWaiter = client.get_waiter("user_exists")
    ```


<a id="service-resource-annotations"></a>

### Service Resource annotations

`IAMServiceResource` provides annotations for `aiobotocore.resource("iam")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_iam import IAMServiceResource

session = get_session()
async with session.resource("iam") as resource:
    resource: IAMServiceResource
    # now resource usage is checked by mypy and IDE should provide code completion
````

<a id="other-resources-annotations"></a>

### Other resources annotations

`types_aiobotocore_iam.service_resource` module contains type annotations for
all resources.

```python
from aiobotocore.session import get_session

from types_aiobotocore_iam import IAMServiceResource
from types_aiobotocore_iam.service_resource import (
    AccessKey,
    AccessKeyPair,
    AccountPasswordPolicy,
    AccountSummary,
    AssumeRolePolicy,
    CurrentUser,
    Group,
    GroupPolicy,
    InstanceProfile,
    LoginProfile,
    MfaDevice,
    Policy,
    PolicyVersion,
    Role,
    RolePolicy,
    SamlProvider,
    ServerCertificate,
    SigningCertificate,
    User,
    UserPolicy,
    VirtualMfaDevice,
)

session = get_session()
async with session.resource("iam") as resource:
    resource: IAMServiceResource

# Explicit type annotations are optional here
# Type should be correctly discovered by mypy and IDEs
    my_access_key: AccessKey = resource.AccessKey(...)
    my_access_key_pair: AccessKeyPair = resource.AccessKeyPair(...)
    my_account_password_policy: AccountPasswordPolicy = resource.AccountPasswordPolicy(...)
    my_account_summary: AccountSummary = resource.AccountSummary(...)
    my_assume_role_policy: AssumeRolePolicy = resource.AssumeRolePolicy(...)
    my_current_user: CurrentUser = resource.CurrentUser(...)
    my_group: Group = resource.Group(...)
    my_group_policy: GroupPolicy = resource.GroupPolicy(...)
    my_instance_profile: InstanceProfile = resource.InstanceProfile(...)
    my_login_profile: LoginProfile = resource.LoginProfile(...)
    my_mfa_device: MfaDevice = resource.MfaDevice(...)
    my_policy: Policy = resource.Policy(...)
    my_policy_version: PolicyVersion = resource.PolicyVersion(...)
    my_role: Role = resource.Role(...)
    my_role_policy: RolePolicy = resource.RolePolicy(...)
    my_saml_provider: SamlProvider = resource.SamlProvider(...)
    my_server_certificate: ServerCertificate = resource.ServerCertificate(...)
    my_signing_certificate: SigningCertificate = resource.SigningCertificate(...)
    my_user: User = resource.User(...)
    my_user_policy: UserPolicy = resource.UserPolicy(...)
    my_virtual_mfa_device: VirtualMfaDevice = resource.VirtualMfaDevice(...)
```

<a id="collections-annotations"></a>

### Collections annotations

`types_aiobotocore_iam.service_resource` module contains type annotations for
all `IAMServiceResource` collections.

```python
from aiobotocore.session import get_session

from types_aiobotocore_iam import IAMServiceResource
from types_aiobotocore_iam.service_resource import (
    ServiceResourceGroupsCollection,
    ServiceResourceInstanceProfilesCollection,
    ServiceResourcePoliciesCollection,
    ServiceResourceRolesCollection,
    ServiceResourceSamlProvidersCollection,
    ServiceResourceServerCertificatesCollection,
    ServiceResourceUsersCollection,
    ServiceResourceVirtualMfaDevicesCollection,
)

session = get_session()
async with session.resource("iam") as resource:
    resource: IAMServiceResource

# Explicit type annotations are optional here
# Type should be correctly discovered by mypy and IDEs
    groups: iam_resources.ServiceResourceGroupsCollection = resource.groups
    instance_profiles: iam_resources.ServiceResourceInstanceProfilesCollection = resource.instance_profiles
    policies: iam_resources.ServiceResourcePoliciesCollection = resource.policies
    roles: iam_resources.ServiceResourceRolesCollection = resource.roles
    saml_providers: iam_resources.ServiceResourceSamlProvidersCollection = resource.saml_providers
    server_certificates: iam_resources.ServiceResourceServerCertificatesCollection = resource.server_certificates
    users: iam_resources.ServiceResourceUsersCollection = resource.users
    virtual_mfa_devices: iam_resources.ServiceResourceVirtualMfaDevicesCollection = resource.virtual_mfa_devices
```

<a id="literals"></a>

### Literals

`types_aiobotocore_iam.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from types_aiobotocore_iam.literals import (
    AccessAdvisorUsageGranularityTypeType,
    ContextKeyTypeEnumType,
    DeletionTaskStatusTypeType,
    EntityTypeType,
    GetAccountAuthorizationDetailsPaginatorName,
    GetGroupPaginatorName,
    InstanceProfileExistsWaiterName,
    ListAccessKeysPaginatorName,
    ListAccountAliasesPaginatorName,
    ListAttachedGroupPoliciesPaginatorName,
    ListAttachedRolePoliciesPaginatorName,
    ListAttachedUserPoliciesPaginatorName,
    ListEntitiesForPolicyPaginatorName,
    ListGroupPoliciesPaginatorName,
    ListGroupsForUserPaginatorName,
    ListGroupsPaginatorName,
    ListInstanceProfilesForRolePaginatorName,
    ListInstanceProfilesPaginatorName,
    ListMFADevicesPaginatorName,
    ListPoliciesPaginatorName,
    ListPolicyVersionsPaginatorName,
    ListRolePoliciesPaginatorName,
    ListRolesPaginatorName,
    ListSSHPublicKeysPaginatorName,
    ListServerCertificatesPaginatorName,
    ListSigningCertificatesPaginatorName,
    ListUserPoliciesPaginatorName,
    ListUserTagsPaginatorName,
    ListUsersPaginatorName,
    ListVirtualMFADevicesPaginatorName,
    PermissionsBoundaryAttachmentTypeType,
    PolicyEvaluationDecisionTypeType,
    PolicyExistsWaiterName,
    PolicySourceTypeType,
    PolicyUsageTypeType,
    ReportFormatTypeType,
    ReportStateTypeType,
    RoleExistsWaiterName,
    SimulateCustomPolicyPaginatorName,
    SimulatePrincipalPolicyPaginatorName,
    UserExistsWaiterName,
    assignmentStatusTypeType,
    encodingTypeType,
    globalEndpointTokenVersionType,
    jobStatusTypeType,
    policyOwnerEntityTypeType,
    policyScopeTypeType,
    policyTypeType,
    sortKeyTypeType,
    statusTypeType,
    summaryKeyTypeType,
    IAMServiceName,
    ServiceName,
    ResourceServiceName,
    PaginatorName,
    WaiterName,
)

def check_value(value: AccessAdvisorUsageGranularityTypeType) -> bool:
    ...
```

<a id="typed-dictionaries"></a>

### Typed dictionaries

`types_aiobotocore_iam.type_defs` module contains structures and shapes
assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_iam.type_defs import (
    AccessDetailTypeDef,
    AccessKeyLastUsedTypeDef,
    AccessKeyMetadataTypeDef,
    AccessKeyTypeDef,
    AddClientIDToOpenIDConnectProviderRequestRequestTypeDef,
    AddRoleToInstanceProfileRequestInstanceProfileAddRoleTypeDef,
    AddRoleToInstanceProfileRequestRequestTypeDef,
    AddUserToGroupRequestGroupAddUserTypeDef,
    AddUserToGroupRequestRequestTypeDef,
    AddUserToGroupRequestUserAddGroupTypeDef,
    AttachGroupPolicyRequestGroupAttachPolicyTypeDef,
    AttachGroupPolicyRequestPolicyAttachGroupTypeDef,
    AttachGroupPolicyRequestRequestTypeDef,
    AttachRolePolicyRequestPolicyAttachRoleTypeDef,
    AttachRolePolicyRequestRequestTypeDef,
    AttachRolePolicyRequestRoleAttachPolicyTypeDef,
    AttachUserPolicyRequestPolicyAttachUserTypeDef,
    AttachUserPolicyRequestRequestTypeDef,
    AttachUserPolicyRequestUserAttachPolicyTypeDef,
    AttachedPermissionsBoundaryResponseMetadataTypeDef,
    AttachedPermissionsBoundaryTypeDef,
    AttachedPolicyTypeDef,
    ChangePasswordRequestRequestTypeDef,
    ChangePasswordRequestServiceResourceChangePasswordTypeDef,
    ContextEntryTypeDef,
    CreateAccessKeyRequestRequestTypeDef,
    CreateAccessKeyResponseTypeDef,
    CreateAccountAliasRequestRequestTypeDef,
    CreateAccountAliasRequestServiceResourceCreateAccountAliasTypeDef,
    CreateGroupRequestGroupCreateTypeDef,
    CreateGroupRequestRequestTypeDef,
    CreateGroupRequestServiceResourceCreateGroupTypeDef,
    CreateGroupResponseTypeDef,
    CreateInstanceProfileRequestRequestTypeDef,
    CreateInstanceProfileRequestServiceResourceCreateInstanceProfileTypeDef,
    CreateInstanceProfileResponseTypeDef,
    CreateLoginProfileRequestLoginProfileCreateTypeDef,
    CreateLoginProfileRequestRequestTypeDef,
    CreateLoginProfileRequestUserCreateLoginProfileTypeDef,
    CreateLoginProfileResponseTypeDef,
    CreateOpenIDConnectProviderRequestRequestTypeDef,
    CreateOpenIDConnectProviderResponseTypeDef,
    CreatePolicyRequestRequestTypeDef,
    CreatePolicyRequestServiceResourceCreatePolicyTypeDef,
    CreatePolicyResponseTypeDef,
    CreatePolicyVersionRequestPolicyCreateVersionTypeDef,
    CreatePolicyVersionRequestRequestTypeDef,
    CreatePolicyVersionResponseTypeDef,
    CreateRoleRequestRequestTypeDef,
    CreateRoleRequestServiceResourceCreateRoleTypeDef,
    CreateRoleResponseTypeDef,
    CreateSAMLProviderRequestRequestTypeDef,
    CreateSAMLProviderRequestServiceResourceCreateSamlProviderTypeDef,
    CreateSAMLProviderResponseTypeDef,
    CreateServiceLinkedRoleRequestRequestTypeDef,
    CreateServiceLinkedRoleResponseTypeDef,
    CreateServiceSpecificCredentialRequestRequestTypeDef,
    CreateServiceSpecificCredentialResponseTypeDef,
    CreateUserRequestRequestTypeDef,
    CreateUserRequestServiceResourceCreateUserTypeDef,
    CreateUserRequestUserCreateTypeDef,
    CreateUserResponseTypeDef,
    CreateVirtualMFADeviceRequestRequestTypeDef,
    CreateVirtualMFADeviceRequestServiceResourceCreateVirtualMfaDeviceTypeDef,
    CreateVirtualMFADeviceResponseTypeDef,
    DeactivateMFADeviceRequestRequestTypeDef,
    DeleteAccessKeyRequestRequestTypeDef,
    DeleteAccountAliasRequestRequestTypeDef,
    DeleteGroupPolicyRequestRequestTypeDef,
    DeleteGroupRequestRequestTypeDef,
    DeleteInstanceProfileRequestRequestTypeDef,
    DeleteLoginProfileRequestRequestTypeDef,
    DeleteOpenIDConnectProviderRequestRequestTypeDef,
    DeletePolicyRequestRequestTypeDef,
    DeletePolicyVersionRequestRequestTypeDef,
    DeleteRolePermissionsBoundaryRequestRequestTypeDef,
    DeleteRolePolicyRequestRequestTypeDef,
    DeleteRoleRequestRequestTypeDef,
    DeleteSAMLProviderRequestRequestTypeDef,
    DeleteSSHPublicKeyRequestRequestTypeDef,
    DeleteServerCertificateRequestRequestTypeDef,
    DeleteServiceLinkedRoleRequestRequestTypeDef,
    DeleteServiceLinkedRoleResponseTypeDef,
    DeleteServiceSpecificCredentialRequestRequestTypeDef,
    DeleteSigningCertificateRequestRequestTypeDef,
    DeleteUserPermissionsBoundaryRequestRequestTypeDef,
    DeleteUserPolicyRequestRequestTypeDef,
    DeleteUserRequestRequestTypeDef,
    DeleteVirtualMFADeviceRequestRequestTypeDef,
    DeletionTaskFailureReasonTypeTypeDef,
    DetachGroupPolicyRequestGroupDetachPolicyTypeDef,
    DetachGroupPolicyRequestPolicyDetachGroupTypeDef,
    DetachGroupPolicyRequestRequestTypeDef,
    DetachRolePolicyRequestPolicyDetachRoleTypeDef,
    DetachRolePolicyRequestRequestTypeDef,
    DetachRolePolicyRequestRoleDetachPolicyTypeDef,
    DetachUserPolicyRequestPolicyDetachUserTypeDef,
    DetachUserPolicyRequestRequestTypeDef,
    DetachUserPolicyRequestUserDetachPolicyTypeDef,
    EnableMFADeviceRequestMfaDeviceAssociateTypeDef,
    EnableMFADeviceRequestRequestTypeDef,
    EnableMFADeviceRequestUserEnableMfaTypeDef,
    EntityDetailsTypeDef,
    EntityInfoTypeDef,
    ErrorDetailsTypeDef,
    EvaluationResultTypeDef,
    GenerateCredentialReportResponseTypeDef,
    GenerateOrganizationsAccessReportRequestRequestTypeDef,
    GenerateOrganizationsAccessReportResponseTypeDef,
    GenerateServiceLastAccessedDetailsRequestRequestTypeDef,
    GenerateServiceLastAccessedDetailsResponseTypeDef,
    GetAccessKeyLastUsedRequestRequestTypeDef,
    GetAccessKeyLastUsedResponseTypeDef,
    GetAccountAuthorizationDetailsRequestGetAccountAuthorizationDetailsPaginateTypeDef,
    GetAccountAuthorizationDetailsRequestRequestTypeDef,
    GetAccountAuthorizationDetailsResponseTypeDef,
    GetAccountPasswordPolicyResponseTypeDef,
    GetAccountSummaryResponseTypeDef,
    GetContextKeysForCustomPolicyRequestRequestTypeDef,
    GetContextKeysForPolicyResponseTypeDef,
    GetContextKeysForPrincipalPolicyRequestRequestTypeDef,
    GetCredentialReportResponseTypeDef,
    GetGroupPolicyRequestRequestTypeDef,
    GetGroupPolicyResponseTypeDef,
    GetGroupRequestGetGroupPaginateTypeDef,
    GetGroupRequestRequestTypeDef,
    GetGroupResponseTypeDef,
    GetInstanceProfileRequestInstanceProfileExistsWaitTypeDef,
    GetInstanceProfileRequestRequestTypeDef,
    GetInstanceProfileResponseTypeDef,
    GetLoginProfileRequestRequestTypeDef,
    GetLoginProfileResponseTypeDef,
    GetOpenIDConnectProviderRequestRequestTypeDef,
    GetOpenIDConnectProviderResponseTypeDef,
    GetOrganizationsAccessReportRequestRequestTypeDef,
    GetOrganizationsAccessReportResponseTypeDef,
    GetPolicyRequestPolicyExistsWaitTypeDef,
    GetPolicyRequestRequestTypeDef,
    GetPolicyResponseTypeDef,
    GetPolicyVersionRequestRequestTypeDef,
    GetPolicyVersionResponseTypeDef,
    GetRolePolicyRequestRequestTypeDef,
    GetRolePolicyResponseTypeDef,
    GetRoleRequestRequestTypeDef,
    GetRoleRequestRoleExistsWaitTypeDef,
    GetRoleResponseTypeDef,
    GetSAMLProviderRequestRequestTypeDef,
    GetSAMLProviderResponseTypeDef,
    GetSSHPublicKeyRequestRequestTypeDef,
    GetSSHPublicKeyResponseTypeDef,
    GetServerCertificateRequestRequestTypeDef,
    GetServerCertificateResponseTypeDef,
    GetServiceLastAccessedDetailsRequestRequestTypeDef,
    GetServiceLastAccessedDetailsResponseTypeDef,
    GetServiceLastAccessedDetailsWithEntitiesRequestRequestTypeDef,
    GetServiceLastAccessedDetailsWithEntitiesResponseTypeDef,
    GetServiceLinkedRoleDeletionStatusRequestRequestTypeDef,
    GetServiceLinkedRoleDeletionStatusResponseTypeDef,
    GetUserPolicyRequestRequestTypeDef,
    GetUserPolicyResponseTypeDef,
    GetUserRequestRequestTypeDef,
    GetUserRequestUserExistsWaitTypeDef,
    GetUserResponseTypeDef,
    GroupDetailTypeDef,
    GroupPolicyRequestTypeDef,
    GroupTypeDef,
    InstanceProfileTypeDef,
    ListAccessKeysRequestListAccessKeysPaginateTypeDef,
    ListAccessKeysRequestRequestTypeDef,
    ListAccessKeysResponseTypeDef,
    ListAccountAliasesRequestListAccountAliasesPaginateTypeDef,
    ListAccountAliasesRequestRequestTypeDef,
    ListAccountAliasesResponseTypeDef,
    ListAttachedGroupPoliciesRequestListAttachedGroupPoliciesPaginateTypeDef,
    ListAttachedGroupPoliciesRequestRequestTypeDef,
    ListAttachedGroupPoliciesResponseTypeDef,
    ListAttachedRolePoliciesRequestListAttachedRolePoliciesPaginateTypeDef,
    ListAttachedRolePoliciesRequestRequestTypeDef,
    ListAttachedRolePoliciesResponseTypeDef,
    ListAttachedUserPoliciesRequestListAttachedUserPoliciesPaginateTypeDef,
    ListAttachedUserPoliciesRequestRequestTypeDef,
    ListAttachedUserPoliciesResponseTypeDef,
    ListEntitiesForPolicyRequestListEntitiesForPolicyPaginateTypeDef,
    ListEntitiesForPolicyRequestRequestTypeDef,
    ListEntitiesForPolicyResponseTypeDef,
    ListGroupPoliciesRequestListGroupPoliciesPaginateTypeDef,
    ListGroupPoliciesRequestRequestTypeDef,
    ListGroupPoliciesResponseTypeDef,
    ListGroupsForUserRequestListGroupsForUserPaginateTypeDef,
    ListGroupsForUserRequestRequestTypeDef,
    ListGroupsForUserResponseTypeDef,
    ListGroupsRequestListGroupsPaginateTypeDef,
    ListGroupsRequestRequestTypeDef,
    ListGroupsResponseTypeDef,
    ListInstanceProfileTagsRequestRequestTypeDef,
    ListInstanceProfileTagsResponseTypeDef,
    ListInstanceProfilesForRoleRequestListInstanceProfilesForRolePaginateTypeDef,
    ListInstanceProfilesForRoleRequestRequestTypeDef,
    ListInstanceProfilesForRoleResponseTypeDef,
    ListInstanceProfilesRequestListInstanceProfilesPaginateTypeDef,
    ListInstanceProfilesRequestRequestTypeDef,
    ListInstanceProfilesResponseTypeDef,
    ListMFADeviceTagsRequestRequestTypeDef,
    ListMFADeviceTagsResponseTypeDef,
    ListMFADevicesRequestListMFADevicesPaginateTypeDef,
    ListMFADevicesRequestRequestTypeDef,
    ListMFADevicesResponseTypeDef,
    ListOpenIDConnectProviderTagsRequestRequestTypeDef,
    ListOpenIDConnectProviderTagsResponseTypeDef,
    ListOpenIDConnectProvidersResponseTypeDef,
    ListPoliciesGrantingServiceAccessEntryTypeDef,
    ListPoliciesGrantingServiceAccessRequestRequestTypeDef,
    ListPoliciesGrantingServiceAccessResponseTypeDef,
    ListPoliciesRequestListPoliciesPaginateTypeDef,
    ListPoliciesRequestRequestTypeDef,
    ListPoliciesResponseTypeDef,
    ListPolicyTagsRequestRequestTypeDef,
    ListPolicyTagsResponseTypeDef,
    ListPolicyVersionsRequestListPolicyVersionsPaginateTypeDef,
    ListPolicyVersionsRequestRequestTypeDef,
    ListPolicyVersionsResponseTypeDef,
    ListRolePoliciesRequestListRolePoliciesPaginateTypeDef,
    ListRolePoliciesRequestRequestTypeDef,
    ListRolePoliciesResponseTypeDef,
    ListRoleTagsRequestRequestTypeDef,
    ListRoleTagsResponseTypeDef,
    ListRolesRequestListRolesPaginateTypeDef,
    ListRolesRequestRequestTypeDef,
    ListRolesResponseTypeDef,
    ListSAMLProviderTagsRequestRequestTypeDef,
    ListSAMLProviderTagsResponseTypeDef,
    ListSAMLProvidersResponseTypeDef,
    ListSSHPublicKeysRequestListSSHPublicKeysPaginateTypeDef,
    ListSSHPublicKeysRequestRequestTypeDef,
    ListSSHPublicKeysResponseTypeDef,
    ListServerCertificateTagsRequestRequestTypeDef,
    ListServerCertificateTagsResponseTypeDef,
    ListServerCertificatesRequestListServerCertificatesPaginateTypeDef,
    ListServerCertificatesRequestRequestTypeDef,
    ListServerCertificatesResponseTypeDef,
    ListServiceSpecificCredentialsRequestRequestTypeDef,
    ListServiceSpecificCredentialsResponseTypeDef,
    ListSigningCertificatesRequestListSigningCertificatesPaginateTypeDef,
    ListSigningCertificatesRequestRequestTypeDef,
    ListSigningCertificatesResponseTypeDef,
    ListUserPoliciesRequestListUserPoliciesPaginateTypeDef,
    ListUserPoliciesRequestRequestTypeDef,
    ListUserPoliciesResponseTypeDef,
    ListUserTagsRequestListUserTagsPaginateTypeDef,
    ListUserTagsRequestRequestTypeDef,
    ListUserTagsResponseTypeDef,
    ListUsersRequestListUsersPaginateTypeDef,
    ListUsersRequestRequestTypeDef,
    ListUsersResponseTypeDef,
    ListVirtualMFADevicesRequestListVirtualMFADevicesPaginateTypeDef,
    ListVirtualMFADevicesRequestRequestTypeDef,
    ListVirtualMFADevicesResponseTypeDef,
    LoginProfileTypeDef,
    MFADeviceTypeDef,
    ManagedPolicyDetailTypeDef,
    OpenIDConnectProviderListEntryTypeDef,
    OrganizationsDecisionDetailTypeDef,
    PaginatorConfigTypeDef,
    PasswordPolicyTypeDef,
    PermissionsBoundaryDecisionDetailTypeDef,
    PolicyDetailTypeDef,
    PolicyGrantingServiceAccessTypeDef,
    PolicyGroupTypeDef,
    PolicyRoleTypeDef,
    PolicyTypeDef,
    PolicyUserTypeDef,
    PolicyVersionTypeDef,
    PositionTypeDef,
    PutGroupPolicyRequestGroupCreatePolicyTypeDef,
    PutGroupPolicyRequestGroupPolicyPutTypeDef,
    PutGroupPolicyRequestRequestTypeDef,
    PutRolePermissionsBoundaryRequestRequestTypeDef,
    PutRolePolicyRequestRequestTypeDef,
    PutRolePolicyRequestRolePolicyPutTypeDef,
    PutUserPermissionsBoundaryRequestRequestTypeDef,
    PutUserPolicyRequestRequestTypeDef,
    PutUserPolicyRequestUserCreatePolicyTypeDef,
    PutUserPolicyRequestUserPolicyPutTypeDef,
    RemoveClientIDFromOpenIDConnectProviderRequestRequestTypeDef,
    RemoveRoleFromInstanceProfileRequestInstanceProfileRemoveRoleTypeDef,
    RemoveRoleFromInstanceProfileRequestRequestTypeDef,
    RemoveUserFromGroupRequestGroupRemoveUserTypeDef,
    RemoveUserFromGroupRequestRequestTypeDef,
    RemoveUserFromGroupRequestUserRemoveGroupTypeDef,
    ResetServiceSpecificCredentialRequestRequestTypeDef,
    ResetServiceSpecificCredentialResponseTypeDef,
    ResourceSpecificResultTypeDef,
    ResponseMetadataTypeDef,
    ResyncMFADeviceRequestMfaDeviceResyncTypeDef,
    ResyncMFADeviceRequestRequestTypeDef,
    RoleDetailTypeDef,
    RoleLastUsedResponseMetadataTypeDef,
    RoleLastUsedTypeDef,
    RolePolicyRequestTypeDef,
    RoleTypeDef,
    RoleUsageTypeTypeDef,
    SAMLProviderListEntryTypeDef,
    SSHPublicKeyMetadataTypeDef,
    SSHPublicKeyTypeDef,
    ServerCertificateMetadataResponseMetadataTypeDef,
    ServerCertificateMetadataTypeDef,
    ServerCertificateTypeDef,
    ServiceLastAccessedTypeDef,
    ServiceResourceAccessKeyPairRequestTypeDef,
    ServiceResourceAccessKeyRequestTypeDef,
    ServiceResourceAssumeRolePolicyRequestTypeDef,
    ServiceResourceGroupPolicyRequestTypeDef,
    ServiceResourceGroupRequestTypeDef,
    ServiceResourceInstanceProfileRequestTypeDef,
    ServiceResourceLoginProfileRequestTypeDef,
    ServiceResourceMfaDeviceRequestTypeDef,
    ServiceResourcePolicyRequestTypeDef,
    ServiceResourcePolicyVersionRequestTypeDef,
    ServiceResourceRolePolicyRequestTypeDef,
    ServiceResourceRoleRequestTypeDef,
    ServiceResourceSamlProviderRequestTypeDef,
    ServiceResourceServerCertificateRequestTypeDef,
    ServiceResourceSigningCertificateRequestTypeDef,
    ServiceResourceUserPolicyRequestTypeDef,
    ServiceResourceUserRequestTypeDef,
    ServiceResourceVirtualMfaDeviceRequestTypeDef,
    ServiceSpecificCredentialMetadataTypeDef,
    ServiceSpecificCredentialTypeDef,
    SetDefaultPolicyVersionRequestRequestTypeDef,
    SetSecurityTokenServicePreferencesRequestRequestTypeDef,
    SigningCertificateTypeDef,
    SimulateCustomPolicyRequestRequestTypeDef,
    SimulateCustomPolicyRequestSimulateCustomPolicyPaginateTypeDef,
    SimulatePolicyResponseTypeDef,
    SimulatePrincipalPolicyRequestRequestTypeDef,
    SimulatePrincipalPolicyRequestSimulatePrincipalPolicyPaginateTypeDef,
    StatementTypeDef,
    TagInstanceProfileRequestRequestTypeDef,
    TagMFADeviceRequestRequestTypeDef,
    TagOpenIDConnectProviderRequestRequestTypeDef,
    TagPolicyRequestRequestTypeDef,
    TagRoleRequestRequestTypeDef,
    TagSAMLProviderRequestRequestTypeDef,
    TagServerCertificateRequestRequestTypeDef,
    TagTypeDef,
    TagUserRequestRequestTypeDef,
    TrackedActionLastAccessedTypeDef,
    UntagInstanceProfileRequestRequestTypeDef,
    UntagMFADeviceRequestRequestTypeDef,
    UntagOpenIDConnectProviderRequestRequestTypeDef,
    UntagPolicyRequestRequestTypeDef,
    UntagRoleRequestRequestTypeDef,
    UntagSAMLProviderRequestRequestTypeDef,
    UntagServerCertificateRequestRequestTypeDef,
    UntagUserRequestRequestTypeDef,
    UpdateAccessKeyRequestAccessKeyActivateTypeDef,
    UpdateAccessKeyRequestAccessKeyDeactivateTypeDef,
    UpdateAccessKeyRequestAccessKeyPairActivateTypeDef,
    UpdateAccessKeyRequestAccessKeyPairDeactivateTypeDef,
    UpdateAccessKeyRequestRequestTypeDef,
    UpdateAccountPasswordPolicyRequestAccountPasswordPolicyUpdateTypeDef,
    UpdateAccountPasswordPolicyRequestRequestTypeDef,
    UpdateAccountPasswordPolicyRequestServiceResourceCreateAccountPasswordPolicyTypeDef,
    UpdateAssumeRolePolicyRequestAssumeRolePolicyUpdateTypeDef,
    UpdateAssumeRolePolicyRequestRequestTypeDef,
    UpdateGroupRequestGroupUpdateTypeDef,
    UpdateGroupRequestRequestTypeDef,
    UpdateLoginProfileRequestLoginProfileUpdateTypeDef,
    UpdateLoginProfileRequestRequestTypeDef,
    UpdateOpenIDConnectProviderThumbprintRequestRequestTypeDef,
    UpdateRoleDescriptionRequestRequestTypeDef,
    UpdateRoleDescriptionResponseTypeDef,
    UpdateRoleRequestRequestTypeDef,
    UpdateSAMLProviderRequestRequestTypeDef,
    UpdateSAMLProviderRequestSamlProviderUpdateTypeDef,
    UpdateSAMLProviderResponseTypeDef,
    UpdateSSHPublicKeyRequestRequestTypeDef,
    UpdateServerCertificateRequestRequestTypeDef,
    UpdateServerCertificateRequestServerCertificateUpdateTypeDef,
    UpdateServiceSpecificCredentialRequestRequestTypeDef,
    UpdateSigningCertificateRequestRequestTypeDef,
    UpdateSigningCertificateRequestSigningCertificateActivateTypeDef,
    UpdateSigningCertificateRequestSigningCertificateDeactivateTypeDef,
    UpdateUserRequestRequestTypeDef,
    UpdateUserRequestUserUpdateTypeDef,
    UploadSSHPublicKeyRequestRequestTypeDef,
    UploadSSHPublicKeyResponseTypeDef,
    UploadServerCertificateRequestRequestTypeDef,
    UploadServerCertificateRequestServiceResourceCreateServerCertificateTypeDef,
    UploadServerCertificateResponseTypeDef,
    UploadSigningCertificateRequestRequestTypeDef,
    UploadSigningCertificateRequestServiceResourceCreateSigningCertificateTypeDef,
    UploadSigningCertificateResponseTypeDef,
    UserAccessKeyRequestTypeDef,
    UserDetailTypeDef,
    UserMfaDeviceRequestTypeDef,
    UserPolicyRequestTypeDef,
    UserResponseMetadataTypeDef,
    UserSigningCertificateRequestTypeDef,
    UserTypeDef,
    VirtualMFADeviceTypeDef,
    WaiterConfigTypeDef,
)

def get_structure() -> AccessDetailTypeDef:
    return {
      ...
    }
```

<a id="how-it-works"></a>

## How it works

Fully automated
[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully
generates type annotations for each service, patiently waiting for
`aiobotocore` updates. It delivers a drop-in type annotations for you and makes
sure that:

- All available `aiobotocore` services are covered.
- Each public class and method of every `aiobotocore` service gets valid type
  annotations extracted from the documentation (blame `botocore` docs if types
  are incorrect).
- Type annotations include up-to-date documentation.
- Link to documentation is provided for every method.
- Code is processed by [black](https://github.com/psf/black) and
  [isort](https://github.com/PyCQA/isort) for readability.

<a id="what's-new"></a>

## What's new

<a id="implemented-features"></a>

### Implemented features

- Fully type annotated `boto3`, `botocore` and `aiobotocore` libraries
- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`
  compatibility
- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type
  annotations for each service
- Generated `TypeDefs` for each service
- Generated `Literals` for each service
- Auto discovery of types for `boto3.client` and `boto3.session` calls
- Auto discovery of types for `session.client` and `session.session` calls
- Auto discovery of types for `client.get_waiter` and `client.get_paginator`
  calls
- Auto discovery of types for `ServiceResource` and `Resource` collections
- Auto discovery of types for `aiobotocore.Session.create_client` calls

<a id="latest-changes"></a>

### Latest changes

Builder changelog can be found in
[Releases](https://github.com/youtype/mypy_boto3_builder/releases).

<a id="versioning"></a>

## Versioning

`types-aiobotocore-iam` version is the same as related `aiobotocore` version
and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

<a id="thank-you"></a>

## Thank you

- [Allie Fitter](https://github.com/alliefitter) for
  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),
  this package is based on top of his work
- [black](https://github.com/psf/black) developers for an awesome formatting
  tool
- [Timothy Edmund Crosley](https://github.com/timothycrosley) for
  [isort](https://github.com/PyCQA/isort) and how flexible it is
- [mypy](https://github.com/python/mypy) developers for doing all dirty work
  for us
- [pyright](https://github.com/microsoft/pyright) team for the new era of typed
  Python

<a id="documentation"></a>

## Documentation

All services type annotations can be found in
[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_iam/)

<a id="support-and-contributing"></a>

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)
repository.



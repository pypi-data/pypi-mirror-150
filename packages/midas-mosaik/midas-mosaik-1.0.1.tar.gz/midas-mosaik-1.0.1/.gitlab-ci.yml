image: python:3.8.13-slim-buster

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - lint
  - build
  - tests
  - docs
  - scenarios

before_script:
  - source venv/bin/activate
  - mkdir /root/.config
  - cp -rvf tmp/.config/midas/ /root/.config/midas
  - pip install -e .[dev]

black-default:
  # image: python:3.8.13-slim-buster
  before_script:
    - python -m pip install --quiet --upgrade black==22.3.0
  cache: {}
  script:
    - python -m black --version
    - python -m black --check -l 79 midas/ tests/ setup.py
  stage: lint

flake8-default:
  # image: python:3.8.13-slim-buster
  before_script:
    - python -m pip install --quiet --upgrade flake8
  cache: {}
  script:
    - python -m flake8 --max-line-length=79 --extend-ignore=E306,E501,E203,F401,E402  midas/ tests/ setup.py
  stage: lint

midas_setup:
  stage: build
  needs: ["black-default", "flake8-default"]
  before_script:
    - echo "Skip before_script in build stage"
  script:
    - apt-get update
    - apt-get install -y git
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install -e .[dev]
    - midasctl configure --autocfg
    - cat /root/.config/midas/midas-runtime-conf.yml
    - midasctl -vv download
    - mkdir -p tmp
    - mkdir -p tmp/.config
    - cp -rvf /root/.config/midas/ tmp/.config/midas/
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas

test-3.8:
  stage: tests
  needs: ["midas_setup"]
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas/
    policy: pull
  script:
    - coverage run --source=midas/ -m pytest
    - coverage report

test-3.9:
  stage: tests
  needs: ["midas_setup"]
  image: python:3.9-slim-buster
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - tmp/.config/midas/
    policy: pull
  before_script:
      - python3 --version
      - python3 -m venv venv
      - source venv/bin/activate
      - pip install --upgrade pip
      - pip install -e .[dev]
  script:
    - coverage run --source=midas/ -m pytest
    - coverage report
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

test-3.10:
  stage: tests
  needs: ["midas_setup"]
  image: python:3.10-slim-buster
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - tmp/.config/midas/
    policy: pull
  before_script:
      - python3 --version
      - python3 -m venv venv
      - source venv/bin/activate
      - pip install --upgrade pip
      - pip install -e .[dev]
  script:
    - coverage run --source=midas/ -m pytest
    - coverage report
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

pages:
  stage: docs
  script:
    - apt-get update
    - apt-get install -y make python3-sphinx
    - cd docs
    - make html
    - mv _build/html ../public
  artifacts:
    paths:
      - public
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

midasmv:
  stage: scenarios
  needs: ["test-3.8"]
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas/
    policy: pull
  script:
    - midasctl run midasmv --no-db --port 55551 --end 9000

midasmv_der:
  stage: scenarios
  needs: ["midasmv"]
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas/
    policy: pull
  script:
    - midasctl run midasmv_goa --no-db --port 55552 --end 9000
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

midaslv:
  stage: scenarios
  needs: ["midasmv"]
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas/
    policy: pull
  script:
    - midasctl run midaslv --no-db --port 55553 --end 9000
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

four_bus:
  stage: scenarios
  needs: ["midasmv"]
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas/
    policy: pull
  script:
    - midasctl run four_bus --no-db --port 55554 --end 9000
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

sbural3:
  stage: scenarios
  needs: ["midasmv"]
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas/
    policy: pull
  script:
    - midasctl run sbrural3 --no-db --port 55555 --end 9000
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

bremerhavenmv:
  stage: scenarios
  needs: ["midasmv"]
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas/
    policy: pull
  script:
    - midasctl run bremerhavenmv --no-db --port 55556 --end 9000
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

midasmv_constr:
  stage: scenarios
  needs: ["midasmv"]
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas/
    policy: pull
  script:
    - midasctl run midasmv_der_constr --no-db --port 55557 --end 9000
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

time_weather_der:
  stage: scenarios
  needs: ["midasmv"]
  cache:
    key: "$CI_COMMIT_SHA"
    paths:
      - .cache/pip
      - venv/
      - tmp/.config/midas/
    policy: pull
  script:
    - midasctl run time_weather_der --no-db --port 55558
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

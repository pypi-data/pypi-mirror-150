{"version":3,"sources":["pages/RunDetail/RunLogsTab/RunLogsTab.tsx","pages/RunDetail/RunLogsTab/index.tsx"],"names":["RunLogsTab","isRunLogsLoading","runHash","runLogs","inProgress","updatedLogsCount","liveUpdate","React","useRef","logsContainerRef","logsWrapperRef","listRef","runsBatchRequestRef","useState","lastRequestType","setLastRequestType","rangeRef","dataRef","parentHeight","setParentHeight","parentWidth","setParentWidth","keysList","setKeyList","visibleItemsRange","startLiveUpdate","intervalToken","setInterval","current","runDetailAppModel","getRunLogs","record_range","isLiveUpdate","call","useEffect","abort","clearInterval","values","_","sortBy","Object","keys","map","value","index","length","scrollToItem","useResizeObserver","offsetHeight","offsetWidth","ErrorBoundary","BusyLoaderWrapper","isLoading","isNil","className","height","isEmpty","IllustrationBlock","size","title","ref","itemCount","itemSize","width","overscanCount","onItemsRendered","props","visibleStartIndex","visibleStopIndex","itemData","logsList","onScroll","scrollOffset","scrollDirection","LogRow","style","data","displayName","memo"],"mappings":"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","file":"static/js/RunLogsTab.js?version=e6a96821a7b2dec532f0","sourcesContent":["import React from 'react';\nimport _ from 'lodash-es';\nimport { ListOnScrollProps, VariableSizeList as List } from 'react-window';\n\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport IllustrationBlock from 'components/IllustrationBlock/IllustrationBlock';\n\nimport useResizeObserver from 'hooks/window/useResizeObserver';\n\nimport runDetailAppModel from 'services/models/runs/runDetailAppModel';\n\nimport { IRunLogsTabProps } from './RunLogsTab.d';\n\nimport './RunLogsTab.scss';\n\nconst SINGLE_LINE_HEIGHT = 16.5;\nconst LOAD_MORE_LOGS_COUNT = 100;\n\nfunction RunLogsTab({\n  isRunLogsLoading,\n  runHash,\n  runLogs,\n  inProgress,\n  updatedLogsCount,\n}: IRunLogsTabProps) {\n  const liveUpdate = React.useRef<any>(null);\n  const logsContainerRef = React.useRef<any>(null);\n  const logsWrapperRef = React.useRef<any>(null);\n  const listRef = React.useRef<any>({});\n  const runsBatchRequestRef = React.useRef<any>({});\n  const [lastRequestType, setLastRequestType] = React.useState<\n    'default' | 'live-update' | 'load-more'\n  >('default');\n  const rangeRef = React.useRef<any>(null);\n  const dataRef = React.useRef<any>(null);\n  const [parentHeight, setParentHeight] = React.useState<any>(0);\n  const [parentWidth, setParentWidth] = React.useState<any>(0);\n  const [keysList, setKeyList] = React.useState<any>(null);\n  const visibleItemsRange = React.useRef<any>(null);\n\n  React.useEffect(() => {\n    runsBatchRequestRef.current = runDetailAppModel.getRunLogs({ runHash });\n    runsBatchRequestRef.current.call();\n\n    // analytics.pageView(ANALYTICS_EVENT_KEYS.runDetails.tabs.params.tabView);\n    startLiveUpdate();\n\n    return () => {\n      runsBatchRequestRef.current.abort();\n      if (liveUpdate.current?.intervalToken) {\n        clearInterval(liveUpdate.current.intervalToken);\n      }\n    };\n  }, []);\n\n  function liveUpdateCallBack() {\n    return function () {\n      setLastRequestType('live-update');\n      runsBatchRequestRef.current = runDetailAppModel.getRunLogs({\n        runHash,\n        record_range: dataRef.current\n          ? `${+rangeRef.current?.[1] > 5 ? +rangeRef.current?.[1] - 5 : 0}:`\n          : '',\n        isLiveUpdate: true,\n      });\n      runsBatchRequestRef.current.call();\n    };\n  }\n\n  function startLiveUpdate() {\n    if (inProgress) {\n      const intervalToken = setInterval(liveUpdateCallBack(), 3000);\n      liveUpdate.current = {\n        intervalToken,\n      };\n    }\n  }\n\n  function onScroll(props: ListOnScrollProps) {\n    if (\n      props.scrollOffset === 0 &&\n      +keysList[0] !== 0 &&\n      props.scrollDirection === 'backward'\n    ) {\n      if (liveUpdate.current?.intervalToken) {\n        clearInterval(liveUpdate.current.intervalToken);\n        runsBatchRequestRef.current.abort();\n      }\n      setLastRequestType('load-more');\n      runsBatchRequestRef.current = runDetailAppModel.getRunLogs({\n        runHash,\n        record_range: `${\n          +rangeRef.current?.[0] > LOAD_MORE_LOGS_COUNT\n            ? +rangeRef.current?.[0] - LOAD_MORE_LOGS_COUNT\n            : 0\n        }:${rangeRef.current?.[0]}`,\n        isLiveUpdate: true,\n      });\n      runsBatchRequestRef.current.call();\n      startLiveUpdate();\n    }\n  }\n\n  React.useEffect(() => {\n    if (!inProgress && liveUpdate.current?.intervalToken) {\n      clearInterval(liveUpdate.current.intervalToken);\n    }\n  }, [inProgress]);\n\n  React.useEffect(() => {\n    const values = _.sortBy(Object.values(runLogs ?? {}), 'index');\n    const keys = _.sortBy(values.map((value) => value.index));\n    rangeRef.current = [keys[0], keys[keys.length - 1]];\n    setKeyList(keys);\n    dataRef.current = values;\n  }, [runLogs]);\n\n  React.useEffect(() => {\n    if (lastRequestType === 'load-more') {\n      listRef.current?.scrollToItem?.(\n        visibleItemsRange.current[0] + updatedLogsCount,\n        'start',\n      );\n    } else if (\n      (lastRequestType === 'live-update' &&\n        visibleItemsRange.current[1] + updatedLogsCount >=\n          dataRef.current?.length - 1) ||\n      lastRequestType === 'default'\n    ) {\n      listRef.current?.scrollToItem?.(dataRef.current?.length - 1, 'end');\n    } else {\n      listRef.current?.scrollToItem?.(visibleItemsRange.current[0], 'start');\n    }\n  }, [dataRef.current?.length, listRef.current]);\n\n  useResizeObserver(() => {\n    if (logsContainerRef.current) {\n      setParentHeight(logsContainerRef.current.offsetHeight);\n      setParentWidth(logsContainerRef.current.offsetWidth);\n    }\n  }, logsContainerRef);\n\n  return (\n    <ErrorBoundary>\n      <BusyLoaderWrapper\n        isLoading={isRunLogsLoading || _.isNil(runLogs)}\n        className='runDetailParamsTabLoader'\n        height='100%'\n      >\n        {!_.isEmpty(runLogs) ? (\n          <div className='RunDetailLogsTabWrapper'>\n            <div className='RunDetailLogsTab'>\n              <div className='Logs' ref={logsWrapperRef}>\n                <div ref={logsContainerRef} className={'Logs__wrapper'}>\n                  <List\n                    key={\n                      logsWrapperRef.current?.offsetHeight +\n                      logsWrapperRef.current?.offsetWidth\n                    }\n                    ref={listRef}\n                    height={logsContainerRef.current?.offsetHeight || 100}\n                    itemCount={dataRef.current?.length}\n                    itemSize={() => SINGLE_LINE_HEIGHT}\n                    width={'100%'}\n                    overscanCount={100}\n                    onItemsRendered={(props) => {\n                      visibleItemsRange.current = [\n                        props.visibleStartIndex,\n                        props.visibleStopIndex,\n                      ];\n                    }}\n                    itemData={{\n                      logsList: dataRef.current,\n                      parentHeight,\n                      parentWidth,\n                      keysList,\n                    }}\n                    onScroll={onScroll}\n                  >\n                    {LogRow}\n                  </List>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <IllustrationBlock\n            size='xLarge'\n            className='runDetailParamsTabLoader'\n            title='No Logs'\n          />\n        )}\n      </BusyLoaderWrapper>\n    </ErrorBoundary>\n  );\n}\n\nfunction LogRow({\n  index,\n  style,\n  data,\n}: {\n  index: number;\n  style: any;\n  data: {\n    parentHeight: any;\n    parentWidth: any;\n    logsList: Array<{ index: string; value: string }>;\n    keysList: any;\n  };\n}) {\n  return (\n    <div style={style}>\n      <pre className={`LogRow__line line${data.logsList?.[index]?.index}`}>\n        {data.logsList?.[index]?.value}\n      </pre>\n    </div>\n  );\n}\n\nRunLogsTab.displayName = 'RunLogsTab';\n\nexport default React.memo(RunLogsTab);\n","import RunLogsTab from './RunLogsTab';\n\nexport default RunLogsTab;\n"],"sourceRoot":""}
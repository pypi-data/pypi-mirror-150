{"version":3,"sources":["svg-pan-zoom-container/utils.ts","svg-pan-zoom-container/pan-on-drag.ts","svg-pan-zoom-container/zoom.ts","svg-pan-zoom-container/index.ts","svg-pan-zoom-container/pan.ts","svg-pan-zoom-container/zoom-on-wheel.ts","index.tsx"],"names":["DomMatrix","window","DOMMatrix","WebKitCSSMatrix","MSCSSMatrix","clamp","value","min","max","getScaleAndOffset","container","content","matrix","style","transform","a","scrollLeft","e","scrollTop","f","setScaleAndOffset","scale","offsetX","offsetY","scrollX","Math","round","scrollY","setAttribute","margin","marginRight","marginBottom","matches","Element","prototype","webkitMatchesSelector","msMatchesSelector","closest","element","selector","call","parentNode","parseOptions","optionsString","options","split","s","index","indexOf","slice","trim","replace","$0","toUpperCase","findTargetAndParseOptions","attributeName","target","HTMLElement","getAttribute","noop","passiveSupported","Object","defineProperty","get","addEventListener","removeEventListener","err","nonPassive","passive","undefined","defaultOptions","preventDefault","event","getScale","firstElementChild","zoom","ratio","minScale","maxScale","origin","previousScale","previousOffsetX","previousOffsetY","offsetScale","previousClientRect","getBoundingClientRect","centerOffsetX","clientX","left","clientY","top","setScale","button","modifier","getModifierState","isPanButtonPressed","previousClientX","onMouseMove","deltaX","deltaY","pan","onMouseUp","initializationOptions","noEmitStyle","document","head","body","documentElement","appendChild","createElement","textContent","zoomAmount","targets","querySelectorAll","i","length","zoomOnWheel","Streamlit","events","RENDER_EVENT","getElementById","svgNode","createElementNS","plotWidth","clientWidth","toString","data","detail","theme","group","upperGroup","connectionGroup","lowerGroup","ticksGroup","upperHeight","lowerHeight","connectionPos","lowerPos","plotHeight","json_data","args","note_data","total_duration","noteEnd","addTicks","childNodes","forEach","childNode","key","parent","removeChild","t","x","y","tickEl","textEl","uppperBounds","lowerBounds","noteHeight","el","expectedBegin","expectedEnd","expectedNotePitch","noteBegin","notePitch","mistakes","expectedBeginX","expectedEndX","expectedNoteY","beginX","endX","noteY","rest1","expectedNoteEl","bgEl","rest2","noteEl","connectionEl","points","join","MutationObserver","mutations","mutation","observe","attributes","attributeFilter","translate","createSVGTransform","setTranslate","baseVal","insertItemBefore","setFrameHeight","setComponentReady"],"mappings":"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","file":"static/js/main.c71c7743.chunk.js","sourcesContent":["const DomMatrix = window.DOMMatrix || window.WebKitCSSMatrix || (window as any).MSCSSMatrix\n\nexport function clamp(value: number, min: number, max: number): number {\n  return value < min ? min : value > max ? max : value\n}\n\nexport function getScaleAndOffset(container: Element, content: HTMLElement | SVGElement): [number, number, number] {\n  const matrix = new DomMatrix(content.style.transform)\n  return [matrix.a, container.scrollLeft - matrix.e, container.scrollTop - matrix.f]\n}\n\nexport function setScaleAndOffset(container: Element, content: HTMLElement | SVGElement, scale: number, offsetX: number, offsetY: number) {\n  const scrollX = Math.round(Math.max(offsetX, 0))\n  const scrollY = Math.round(Math.max(offsetY, 0))\n\n  // setAttribute for Chrome, style.transform for Firefox and Safari\n  // content.setAttribute('transform', content.style.transform = `matrix(${scale},0,0,${scale},${scrollX - offsetX},${scrollY - offsetY})`)\n  content.setAttribute('transform', content.style.transform = `matrix(${scale},0,0,1,${scrollX - offsetX},${scrollY - offsetY})`)\n  content.style.margin = 0 as number & string\n  container.scrollLeft = scrollX\n  container.scrollTop = scrollY\n  if (container.scrollLeft !== scrollX) {\n    content.style.marginRight = `${scrollX}px`\n    container.scrollLeft = scrollX\n  }\n  if (container.scrollTop !== scrollY) {\n    content.style.marginBottom = `${scrollY}px`\n    container.scrollTop = scrollY\n  }\n}\n\nconst matches =\n  Element.prototype.matches ||\n  Element.prototype.webkitMatchesSelector ||\n  Element.prototype.msMatchesSelector\n\nconst closest: (element: Element | null, selector: string) => Element | null =\n  !!Element.prototype.closest\n  ? (element, selector) => element && element.closest(selector)\n  : (element, selector) => {\n    while (element && !matches.call(element, selector)) {\n      element = element.parentNode instanceof Element ? element.parentNode : null\n    }\n    return element\n  }\n\nexport function parseOptions(optionsString: string | undefined | null): Record<string, string> {\n  const options: Record<string, string> = {}\n  if (optionsString) {\n    for (const s of optionsString.split(';')) {\n      const index = s.indexOf(':')\n      options[s.slice(0, index).trim().replace(/[a-zA-Z0-9_]-[a-z]/g, $0 => $0[0] + $0[2].toUpperCase())] = s.slice(index + 1).trim()\n    }\n  }\n  return options\n}\n\nexport function findTargetAndParseOptions(element: Element | null, attributeName: string): [HTMLElement, Record<string, string>] | [] {\n  const target = closest(element, `[${attributeName}]`)\n  return target instanceof HTMLElement ? [target, parseOptions(target.getAttribute(attributeName))] : []\n}\n\nfunction noop() {}\n\nlet passiveSupported = false;\n\ntry {\n  const options = Object.defineProperty({}, 'passive', {\n    get() {\n      passiveSupported = true;\n    }\n  })\n\n  window.addEventListener('t', noop, options);\n  window.removeEventListener('t', noop, options);\n} catch(err) {\n  passiveSupported = false;\n}\n\nexport const nonPassive: AddEventListenerOptions | undefined = passiveSupported ? { passive: false } : undefined;\n","import { pan } from './pan'\nimport { findTargetAndParseOptions } from './utils'\n\nexport interface PanOnDragOptions {\n  readonly button: 'left' | 'right'\n  readonly modifier?: 'Alt' | 'Control' | 'Meta' | 'Shift'\n}\n\nconst preventDefault = (event: Event) => event.preventDefault()\n\nexport function panOnDrag(attributeName: string, defaultOptions: PanOnDragOptions) {\n  window.addEventListener('mousedown', event => {\n    if (event.button !== 0 && event.button !== 2) {\n      return\n    }\n    const [target, options] = findTargetAndParseOptions(event.target as Element, attributeName)\n    if (!target || !options || !isPanButtonPressed(event, options, defaultOptions)) {\n      return\n    }\n    event.preventDefault()\n\n    let previousClientX = event.clientX\n    let previousClientY = event.clientY\n\n    const onMouseMove = (event: MouseEvent) => {\n      pan(\n        target,\n        previousClientX - event.clientX,\n        0//previousClientY - event.clientY,\n      )\n      previousClientX = event.clientX\n      previousClientY = event.clientY\n      event.preventDefault()\n    }\n\n    const onMouseUp = () => {\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('contextmenu', preventDefault)\n    }\n\n    window.addEventListener('mouseup', onMouseUp)\n    window.addEventListener('mousemove', onMouseMove)\n    window.addEventListener('contextmenu', preventDefault)\n  })\n}\n\nfunction isPanButtonPressed(event: MouseEvent, options: Partial<PanOnDragOptions>, defaultOptions: PanOnDragOptions) {\n  return (\n    (!options.modifier || event.getModifierState(options.modifier)) &&\n    event.button === ((options.button || defaultOptions.button) === 'right' ? 2 : 0)\n  )\n}\n","import { clamp, getScaleAndOffset, setScaleAndOffset } from './utils'\n\nexport interface ZoomOptions {\n  readonly origin?: {\n    readonly clientX: number\n    readonly clientY: number\n  }\n  readonly minScale?: number\n  readonly maxScale?: number\n}\n\nexport function getScale(container: HTMLElement) {\n  return getScaleAndOffset(container, container.firstElementChild as SVGSVGElement)[0]\n}\n\nexport function setScale(container: HTMLElement, value: number, options: ZoomOptions = {}) {\n  const scale = clamp(value, options.minScale || 1, options.maxScale || 10)\n  const origin = options.origin\n  const content = container.firstElementChild as SVGSVGElement\n  const [previousScale, previousOffsetX, previousOffsetY] = getScaleAndOffset(container, content)\n  if (scale === previousScale) {\n    return\n  }\n  const offsetScale = scale / previousScale - 1\n  const previousClientRect = content.getBoundingClientRect()\n  const centerOffsetX = (origin && origin.clientX || 0) - previousClientRect.left\n  const centerOffsetY = (origin && origin.clientY || 0) - previousClientRect.top\n  const offsetX = previousOffsetX + offsetScale * centerOffsetX\n  // const offsetY = previousOffsetY + offsetScale * centerOffsetY\n  \n  const offsetY = previousOffsetY //+ offsetScale * centerOffsetY\n  setScaleAndOffset(container, content, scale, offsetX, offsetY)\n}\n\nexport function resetScale(container: HTMLElement) {\n  const content = container.firstElementChild as SVGSVGElement\n  content.style.margin = container.scrollLeft = container.scrollTop = 0 as number & string\n  content.removeAttribute('transform')\n  content.style.transform = ''\n}\n\nexport function zoom(container: HTMLElement, ratio: number, options?: ZoomOptions) {\n  setScale(container, getScale(container) * ratio, options)\n}\n","import { panOnDrag } from './pan-on-drag'\nimport { zoomOnWheel } from './zoom-on-wheel'\n\nexport * from './pan'\nexport * from './zoom'\n\npanOnDrag(\n  'data-pan-on-drag',\n  {\n    button: 'left',\n  },\n)\n\nzoomOnWheel(\n  'data-zoom-on-wheel',\n  {\n    minScale: 1,\n    maxScale: 10,\n    zoomAmount: .002,\n  },\n)\n","import { getScaleAndOffset, setScaleAndOffset } from './utils'\n\nexport function pan(container: HTMLElement, deltaX: number, deltaY: number) {\n  const content = container.firstElementChild as SVGSVGElement\n  const [scale, previousOffsetX, previousOffsetY] = getScaleAndOffset(container, content)\n  setScaleAndOffset(container, content, scale, previousOffsetX + deltaX, previousOffsetY + deltaY)\n}\n","import { zoom, ZoomOptions } from './zoom'\nimport { findTargetAndParseOptions, nonPassive, parseOptions } from './utils'\n\nexport interface ZoomOnWheelOptions extends ZoomOptions {\n  readonly zoomAmount: number\n}\n\nexport function zoomOnWheel(attributeName: string, defaultOptions: ZoomOnWheelOptions, initializationOptions: { readonly noEmitStyle?: boolean } = {}) {\n  if (!initializationOptions.noEmitStyle) {\n    (document.head || document.body || document.documentElement)\n      .appendChild(document.createElement('style'))\n      .textContent = `[${attributeName}]{overflow:scroll}[${attributeName}]>:first-child{width:100%;height:100%;vertical-align:middle;transform-origin:0 0}`\n  }\n\n  window.addEventListener('wheel', event => {\n    const [target, options] = findTargetAndParseOptions(event.target as Element, attributeName)\n    if (target instanceof HTMLElement) {\n      const zoomAmount = +options!.zoomAmount || defaultOptions.zoomAmount\n      zoom(target, (1 + zoomAmount) ** -event.deltaY, {\n        origin: event,\n        minScale: +options!.minScale || defaultOptions.minScale,\n        maxScale: +options!.maxScale || defaultOptions.maxScale,\n      })\n      event.preventDefault()\n    }\n  }, nonPassive)\n\n  window.addEventListener('resize', () => {\n    const targets = document.querySelectorAll(`[${attributeName}]`)\n    for (let i = 0; i < targets.length; i++) {\n      const target = targets[i]\n      if (target instanceof HTMLElement) {\n        const options = parseOptions(target.getAttribute(attributeName))\n        zoom(target, 1, options)\n      }\n    }\n  })\n}\n","import { Streamlit, RenderData } from \"streamlit-component-lib\"\nimport './svg-pan-zoom-container'\nimport { getScale, pan } from './svg-pan-zoom-container';\n// Add a click handler to our button. It will send data back to Streamlit.\n\nlet isFocused = false\n\nfunction onRender(event: Event): void {\n\n  const container = document.getElementById('container')\n  const svgNode = container!.appendChild(document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\"))\n\n  const plotWidth = document.body.clientWidth\n  \n  const plotHeight = 1000\n  svgNode.setAttribute(\"width\", plotWidth.toString())\n  svgNode.setAttribute(\"height\", plotHeight.toString())\n    \n\n  // Get the RenderData from the event\n  const data = (event as CustomEvent<RenderData>).detail\n\n  // Maintain compatibility with older versions of Streamlit that don't send\n  // a theme object.\n  if (data.theme) {\n    // Use CSS vars to style our button border. Alternatively, the theme style\n    // is defined in the data.theme object.\n    const borderStyling = `1px solid var(${\n      isFocused ? \"--primary-color\" : \"gray\"\n    })`\n  }\n\n  const group = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n  const upperGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n  const connectionGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n  const lowerGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n  const ticksGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n\n  upperGroup.setAttribute('fill', 'white')\n  connectionGroup.setAttribute('stroke', 'white')\n  connectionGroup.setAttribute('stroke-width', '0.2')\n  lowerGroup.setAttribute('fill', 'white')\n\n  const connectionHeight = plotHeight / 8\n  \n  const upperHeight = (plotHeight-connectionHeight) / 2\n  const lowerHeight = (plotHeight-connectionHeight) / 2\n\n  const upperPos = 0\n  const connectionPos = upperPos + upperHeight\n  const lowerPos = connectionPos + connectionHeight\n\n  const json_data = data.args['json']\n  const audioFilename = data.args['audioFilename']\n\n  const note_data = json_data['noteAnnotations']\n  const total_duration = note_data[note_data.length-1].noteEnd as number\n\n  const addTicks = (scale: number) => {\n\n    ticksGroup.childNodes.forEach((childNode, key, parent) => {\n      ticksGroup.removeChild(childNode)\n    })\n\n    for (let t = 0; t < total_duration; t++) {\n      const x = t / total_duration * plotWidth;\n      const y = upperPos+upperHeight\n  \n      const tickEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\")\n      tickEl.setAttribute('x1', x.toString())\n      tickEl.setAttribute('x2', x.toString())\n      tickEl.setAttribute('y1', y.toString())\n      tickEl.setAttribute('y2', (y-5).toString())\n      tickEl.setAttribute('stroke-width', `${1.0/scale}`)\n      tickEl.setAttribute('stroke', 'white')\n  \n      const textEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\")\n      textEl.setAttribute('fill', 'white')\n      textEl.setAttribute('dy', \"15\")\n      textEl.setAttribute('font-size', \"10\")\n      textEl.setAttribute('transform', `translate(${x}, ${y}) scale(${1.0/scale}, 1) rotate(45)`)\n      textEl.textContent = t.toString()\n  \n      ticksGroup.appendChild(tickEl)\n      ticksGroup.appendChild(textEl)\n  \n      ticksGroup.appendChild(tickEl)\n      ticksGroup.appendChild(textEl)\n    }\n  }\n\n  addTicks(1)\n\n\n  const uppperBounds = svgNode.appendChild(\n    document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\")\n  )\n  uppperBounds.setAttribute('x', \"0\")\n  uppperBounds.setAttribute('y', upperPos.toString())\n  uppperBounds.setAttribute('width', plotWidth.toString())\n  uppperBounds.setAttribute('height', upperHeight.toString())\n  uppperBounds.setAttribute('fill', 'none')\n  uppperBounds.setAttribute('stroke', '#fff')\n\n  const lowerBounds = svgNode.appendChild(\n    document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\")\n  )\n  lowerBounds.setAttribute('x', \"0\")\n  lowerBounds.setAttribute('y', lowerPos.toString())\n  lowerBounds.setAttribute('width', plotWidth.toString())\n  lowerBounds.setAttribute('height', lowerHeight.toString())\n  lowerBounds.setAttribute('fill', 'none')\n  lowerBounds.setAttribute('stroke', '#fff')\n\n  const noteHeight = upperHeight / 127.0\n  \n  for (const el of note_data) {\n      const expectedBegin = el['expectedNoteBegin'] as number\n      const expectedEnd = el['expectedNoteEnd'] as number\n      const expectedNotePitch = el['expectedNotePitch'] as number\n\n      const noteBegin = el['noteBegin'] as number\n      const noteEnd = el['noteEnd'] as number\n      const notePitch = el['notePitch'] as number\n      const mistakes = el['mistakes']\n     \n      const expectedBeginX = expectedBegin / total_duration * plotWidth\n      const expectedEndX = expectedEnd / total_duration * plotWidth\n      const expectedNoteY = upperHeight * (127-expectedNotePitch) / 127.0\n\n      const beginX = noteBegin / total_duration * plotWidth\n      const endX = noteEnd / total_duration * plotWidth\n      const noteY = lowerPos + lowerHeight * (127-notePitch) / 127.0\n\n      let rest1 = true\n\n      if (expectedNotePitch != 0) {\n        const expectedNoteEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\")\n        expectedNoteEl.setAttribute('x', expectedBeginX.toString())\n        expectedNoteEl.setAttribute('y', expectedNoteY.toString())\n        expectedNoteEl.setAttribute('width', (expectedEndX-expectedBeginX).toString())\n        expectedNoteEl.setAttribute('height', noteHeight.toString())\n        upperGroup.appendChild(expectedNoteEl)\n\n        const bgEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\")\n        bgEl.setAttribute('x', expectedBeginX.toString())\n        bgEl.setAttribute('y', upperPos.toString())\n        bgEl.setAttribute('width', (expectedEndX-expectedBeginX).toString())\n        bgEl.setAttribute('height', upperHeight.toString())\n        bgEl.setAttribute('fill', '#aaa1')\n        bgEl.setAttribute('stroke', '#aaa')\n        bgEl.setAttribute('stroke-width', '0.1')\n        upperGroup.appendChild(bgEl)\n\n        rest1 = false\n      }\n\n      let rest2 = true\n\n      if (notePitch != 0) {\n        const noteEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\")\n        noteEl.setAttribute('x', beginX.toString())\n        noteEl.setAttribute('y', (noteY).toString())\n        noteEl.setAttribute('width', (endX-beginX).toString())\n        noteEl.setAttribute('height', noteHeight.toString())\n\n        if (mistakes === '') {\n          noteEl.setAttribute('fill', '#0f0f')\n          noteEl.setAttribute('stroke', '#0f0')\n        } else {\n          noteEl.setAttribute('fill', '#f00f')\n          noteEl.setAttribute('stroke', '#f00')\n        }\n\n        lowerGroup.appendChild(noteEl)\n\n        const bgEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\")\n        bgEl.setAttribute('x', beginX.toString())\n        bgEl.setAttribute('y', lowerPos.toString())\n        bgEl.setAttribute('width', (endX-beginX).toString())\n        bgEl.setAttribute('height', lowerHeight.toString())\n\n        bgEl.setAttribute('fill', '#aaa1')\n        bgEl.setAttribute('stroke', '#aaa')\n\n        bgEl.setAttribute('stroke-width', '0.1')\n        lowerGroup.appendChild(bgEl)\n\n        rest2 = false\n      }\n\n      if (! (rest1 || rest2)) {\n        const connectionEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\")\n\n        const points = [\n          expectedBeginX,\n          connectionPos,\n          beginX,\n          lowerPos,\n          endX,\n          lowerPos,\n          expectedEndX,\n          connectionPos\n        ]\n\n        connectionEl.setAttribute('points', points.join(','))\n        connectionEl.setAttribute('fill', '#aaa1')\n        connectionEl.setAttribute('stroke', '#aaa')\n\n        connectionGroup.appendChild(connectionEl)\n      }\n  }\n\n  group.appendChild(ticksGroup)\n  group.appendChild(upperGroup)\n  group.appendChild(connectionGroup)\n  group.appendChild(lowerGroup)\n  svgNode.appendChild(group)\n\n  const observer = new MutationObserver(function (mutations) {\n    mutations.forEach(function (mutation) {\n      let scale = getScale(container!)\n      addTicks(scale)\n    });\n  });\n  \n  observer.observe(container!.firstElementChild!, {\n    attributes: true,\n    attributeFilter: ['transform'],\n  });\n\n  let translate = svgNode.createSVGTransform()\n  translate.setTranslate(0, 0);\n  group.transform.baseVal.insertItemBefore(translate, 0);\n\n  Streamlit.setFrameHeight(plotHeight)\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight(1000)\n"],"sourceRoot":""}
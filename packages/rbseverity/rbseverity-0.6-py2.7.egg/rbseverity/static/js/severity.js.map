{"version":3,"file":"severity.js","names":["window","RBSeverity","CommentDialogHookView","Backbone","View","extend","events","buttonsTemplate","_","template","initialize","options","commentDialog","commentEditor","render","$severityButtons","$","$saveButton","remove","$buttons","prepend","find","bindVisibility","bindProperty","elementToModel","inverse","setExtraData","_onSaveMajorClicked","_saveCommon","_onSaveMinorClicked","_onSaveInfoClicked","severity","get","save","ReviewDialogCommentHookView","model","$el","html","id","_$select","val","_onSeverityChanged","Extension","RB","prototype","call","CommentDialogHook","extension","viewType","ReviewDialogCommentHook"],"sources":["severity.es6.js"],"sourcesContent":["window.RBSeverity = {};\n\n\n/**\n * Extends the comment dialog to provide buttons for severity.\n *\n * The Save button will be removed, and in its place will be a set of\n * buttons for choosing the severity level for the comment. The buttons\n * each work as save buttons.\n */\nRBSeverity.CommentDialogHookView = Backbone.View.extend({\n    events: {\n        'click .buttons .save-major': '_onSaveMajorClicked',\n        'click .buttons .save-minor': '_onSaveMinorClicked',\n        'click .buttons .save-info': '_onSaveInfoClicked',\n    },\n\n    buttonsTemplate: _.template(dedent`\n        <span class=\"severity-actions\">\n          <input type=\"button\" class=\"save-major\" value=\"Major\"\n                 disabled=\"true\" />\n          <input type=\"button\" class=\"save-minor\" value=\"Minor\"\n                 disabled=\"true\" />\n          <input type=\"button\" class=\"save-info\" value=\"Info\"\n                 disabled=\"true\" />\n        </span>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     commentDialog (RB.CommentDialogView):\n     *         The comment dialog.\n     *\n     *     commentEditor (RB.CommentEditor):\n     *         The comment editor model.\n     */\n    initialize(options) {\n        this.commentDialog = options.commentDialog;\n        this.commentEditor = options.commentEditor;\n    },\n\n    /**\n     * Render the additions to the comment dialog.\n     *\n     * This will remove the Save button and set up the new buttons.\n     */\n    render() {\n        const $severityButtons = $(this.buttonsTemplate());\n\n        this.commentDialog.$saveButton.remove();\n        this.commentDialog.$buttons.prepend($severityButtons);\n\n        $severityButtons.find('input')\n            .bindVisibility(this.commentEditor, 'canEdit')\n            .bindProperty('disabled', this.commentEditor, 'canSave', {\n                elementToModel: false,\n                inverse: true,\n            });\n\n        /* Set a default severity, in case the user hits Control-Enter. */\n        this.commentEditor.setExtraData('severity', 'info');\n    },\n\n    /**\n     * Handler for when the \"Major\" button is clicked.\n     *\n     * Saves the comment with a \"Major\" severity.\n     */\n    _onSaveMajorClicked() {\n        this._saveCommon('major');\n    },\n\n    /**\n     * Handler for when the \"Minor\" button is clicked.\n     *\n     * Saves the comment with a \"Minor\" severity.\n     */\n    _onSaveMinorClicked() {\n        this._saveCommon('minor');\n    },\n\n    /**\n     * Handler for when the \"Info\" button is clicked.\n     *\n     * Saves the comment with an \"Info\" severity.\n     */\n    _onSaveInfoClicked() {\n        this._saveCommon('info');\n    },\n\n    /**\n     * Common function for saving with a severity.\n     *\n     * This will set the severity for the comment and then save it.\n     *\n     * Args:\n     *     severity (string):\n     *         The severity to set.\n     */\n    _saveCommon(severity) {\n        if (this.commentEditor.get('canSave')) {\n            this.commentEditor.setExtraData('severity', severity);\n            this.commentDialog.save();\n        }\n    },\n});\n\n\n/**\n * Extends the review dialog to allow setting severities on unpublished\n * comments.\n *\n * A field will be provided that contains a list of severities to choose\n * from.\n *\n * If the comment does not have any severity set yet (meaning it's a pending\n * comment from before the extension was activated), a blank entry will be\n * added. If the severity is then set, the blank entry will go away the next\n * time it's loaded.\n */\nRBSeverity.ReviewDialogCommentHookView = Backbone.View.extend({\n    events: {\n        'change select': '_onSeverityChanged',\n    },\n\n    template: _.template(dedent`\n        <label for=\"<%- id %>\">Severity:</label>\n        <select id=\"<%- id %>\">\n         <option value=\"major\">Major</option>\n         <option value=\"minor\">Minor</option>\n         <option value=\"info\">Info</option>\n        </select>\n    `),\n\n    /**\n     * Render the editor for a comment's severity.\n     *\n     * Returns:\n     *     RBSeverity.ReviewDialogCommentHookView:\n     *     This object, for chaining.\n     */\n    render() {\n        const severity = this.model.get('extraData').severity;\n\n        this.$el.html(this.template({\n            id: 'severity_' + this.model.id,\n        }));\n\n        this._$select = this.$('select');\n\n        if (severity) {\n            this._$select.val(severity);\n        } else {\n            this._$select.prepend($('<option selected/>'));\n        }\n\n        return this;\n    },\n\n    /**\n     * Handler for when the severity is changed by the user.\n     *\n     * Updates the severity on the comment to match.\n     */\n    _onSeverityChanged() {\n        this.model.get('extraData').severity = this._$select.val();\n        this.model.save();\n    },\n});\n\n\n/**\n * Extends Review Board with comment severity support.\n *\n * This plugs into the comment dialog and review dialog to add the ability\n * to set severities for comments.\n */\nRBSeverity.Extension = RB.Extension.extend({\n    /**\n     * Initialize the JavaScript extension.\n     */\n    initialize() {\n        RB.Extension.prototype.initialize.call(this);\n\n        new RB.CommentDialogHook({\n            extension: this,\n            viewType: RBSeverity.CommentDialogHookView,\n        });\n\n        new RB.ReviewDialogCommentHook({\n            extension: this,\n            viewType: RBSeverity.ReviewDialogCommentHookView,\n        });\n    },\n});\n"],"mappings":"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"}
"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ShutdownRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESTART_FIELD_NUMBER: builtins.int
    restart: builtins.bool
    def __init__(self,
        *,
        restart: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["restart",b"restart"]) -> None: ...
global___ShutdownRequest = ShutdownRequest

class ShutdownResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___ShutdownResponse = ShutdownResponse

class ExecuteCodeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CODE_FIELD_NUMBER: builtins.int
    code: typing.Text
    def __init__(self,
        *,
        code: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code"]) -> None: ...
global___ExecuteCodeRequest = ExecuteCodeRequest

class ExecuteCodeReply(google.protobuf.message.Message):
    """A response message containing a greeting"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Channel:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ChannelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ExecuteCodeReply._Channel.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: ExecuteCodeReply._Channel.ValueType  # 0
        IOPUB: ExecuteCodeReply._Channel.ValueType  # 1
        SHELL: ExecuteCodeReply._Channel.ValueType  # 2
    class Channel(_Channel, metaclass=_ChannelEnumTypeWrapper):
        pass

    UNKNOWN: ExecuteCodeReply.Channel.ValueType  # 0
    IOPUB: ExecuteCodeReply.Channel.ValueType  # 1
    SHELL: ExecuteCodeReply.Channel.ValueType  # 2

    CHANNEL_FIELD_NUMBER: builtins.int
    MSG_TYPE_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    channel: global___ExecuteCodeReply.Channel.ValueType
    msg_type: typing.Text
    content: typing.Text
    error: typing.Text
    def __init__(self,
        *,
        channel: global___ExecuteCodeReply.Channel.ValueType = ...,
        msg_type: typing.Text = ...,
        content: typing.Text = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel",b"channel","content",b"content","error",b"error","msg_type",b"msg_type"]) -> None: ...
global___ExecuteCodeReply = ExecuteCodeReply

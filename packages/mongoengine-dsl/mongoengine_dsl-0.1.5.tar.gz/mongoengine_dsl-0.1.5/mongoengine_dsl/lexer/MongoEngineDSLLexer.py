# Generated from mongoengine_dsl/lexer/MongoEngineDSL.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,24,334,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,1,
        0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,
        8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,
        1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,
        1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
        1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,
        1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,
        1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,45,1,45,1,46,
        1,46,1,46,1,47,1,47,3,47,231,8,47,1,47,3,47,234,8,47,1,48,1,48,1,
        48,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,52,1,52,1,52,1,53,1,53,1,
        54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,
        55,3,55,265,8,55,1,56,3,56,268,8,56,1,56,4,56,271,8,56,11,56,12,
        56,272,1,57,3,57,276,8,57,1,57,4,57,279,8,57,11,57,12,57,280,1,57,
        1,57,4,57,285,8,57,11,57,12,57,286,1,58,1,58,1,58,1,58,5,58,293,
        8,58,10,58,12,58,296,9,58,1,58,1,58,1,58,1,58,1,58,5,58,303,8,58,
        10,58,12,58,306,9,58,1,58,3,58,309,8,58,1,59,1,59,1,59,1,59,1,59,
        4,59,316,8,59,11,59,12,59,317,1,60,1,60,1,61,1,61,1,62,1,62,1,63,
        1,63,1,64,4,64,329,8,64,11,64,12,64,330,1,64,1,64,0,0,65,1,1,3,2,
        5,0,7,0,9,0,11,0,13,0,15,0,17,0,19,0,21,0,23,0,25,0,27,0,29,0,31,
        0,33,0,35,0,37,0,39,0,41,0,43,0,45,0,47,0,49,0,51,0,53,0,55,0,57,
        0,59,0,61,0,63,0,65,0,67,0,69,0,71,0,73,0,75,0,77,0,79,0,81,0,83,
        0,85,0,87,3,89,4,91,5,93,6,95,7,97,8,99,9,101,10,103,11,105,12,107,
        13,109,14,111,15,113,16,115,17,117,18,119,19,121,20,123,21,125,22,
        127,23,129,24,1,0,32,1,0,48,57,2,0,65,90,97,122,2,0,65,65,97,97,
        2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,
        101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,
        73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,
        2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,
        112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,
        0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,
        119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,122,122,2,0,44,
        44,65292,65292,2,0,34,34,92,92,2,0,39,39,92,92,3,0,9,10,13,13,32,
        32,311,0,1,1,0,0,0,0,3,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,
        0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
        1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
        0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
        0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,
        129,1,0,0,0,1,131,1,0,0,0,3,133,1,0,0,0,5,135,1,0,0,0,7,137,1,0,
        0,0,9,139,1,0,0,0,11,141,1,0,0,0,13,143,1,0,0,0,15,145,1,0,0,0,17,
        147,1,0,0,0,19,149,1,0,0,0,21,151,1,0,0,0,23,153,1,0,0,0,25,155,
        1,0,0,0,27,157,1,0,0,0,29,159,1,0,0,0,31,161,1,0,0,0,33,163,1,0,
        0,0,35,165,1,0,0,0,37,167,1,0,0,0,39,169,1,0,0,0,41,171,1,0,0,0,
        43,173,1,0,0,0,45,175,1,0,0,0,47,177,1,0,0,0,49,179,1,0,0,0,51,181,
        1,0,0,0,53,183,1,0,0,0,55,185,1,0,0,0,57,187,1,0,0,0,59,189,1,0,
        0,0,61,191,1,0,0,0,63,193,1,0,0,0,65,195,1,0,0,0,67,197,1,0,0,0,
        69,199,1,0,0,0,71,201,1,0,0,0,73,203,1,0,0,0,75,205,1,0,0,0,77,207,
        1,0,0,0,79,209,1,0,0,0,81,211,1,0,0,0,83,213,1,0,0,0,85,215,1,0,
        0,0,87,217,1,0,0,0,89,219,1,0,0,0,91,221,1,0,0,0,93,225,1,0,0,0,
        95,233,1,0,0,0,97,235,1,0,0,0,99,238,1,0,0,0,101,240,1,0,0,0,103,
        243,1,0,0,0,105,245,1,0,0,0,107,248,1,0,0,0,109,250,1,0,0,0,111,
        264,1,0,0,0,113,267,1,0,0,0,115,275,1,0,0,0,117,308,1,0,0,0,119,
        315,1,0,0,0,121,319,1,0,0,0,123,321,1,0,0,0,125,323,1,0,0,0,127,
        325,1,0,0,0,129,328,1,0,0,0,131,132,5,40,0,0,132,2,1,0,0,0,133,134,
        5,41,0,0,134,4,1,0,0,0,135,136,7,0,0,0,136,6,1,0,0,0,137,138,7,1,
        0,0,138,8,1,0,0,0,139,140,7,2,0,0,140,10,1,0,0,0,141,142,7,3,0,0,
        142,12,1,0,0,0,143,144,7,4,0,0,144,14,1,0,0,0,145,146,7,5,0,0,146,
        16,1,0,0,0,147,148,7,6,0,0,148,18,1,0,0,0,149,150,7,7,0,0,150,20,
        1,0,0,0,151,152,7,8,0,0,152,22,1,0,0,0,153,154,7,9,0,0,154,24,1,
        0,0,0,155,156,7,10,0,0,156,26,1,0,0,0,157,158,7,11,0,0,158,28,1,
        0,0,0,159,160,7,12,0,0,160,30,1,0,0,0,161,162,7,13,0,0,162,32,1,
        0,0,0,163,164,7,14,0,0,164,34,1,0,0,0,165,166,7,15,0,0,166,36,1,
        0,0,0,167,168,7,16,0,0,168,38,1,0,0,0,169,170,7,17,0,0,170,40,1,
        0,0,0,171,172,7,18,0,0,172,42,1,0,0,0,173,174,7,19,0,0,174,44,1,
        0,0,0,175,176,7,20,0,0,176,46,1,0,0,0,177,178,7,21,0,0,178,48,1,
        0,0,0,179,180,7,22,0,0,180,50,1,0,0,0,181,182,7,23,0,0,182,52,1,
        0,0,0,183,184,7,24,0,0,184,54,1,0,0,0,185,186,7,25,0,0,186,56,1,
        0,0,0,187,188,7,26,0,0,188,58,1,0,0,0,189,190,7,27,0,0,190,60,1,
        0,0,0,191,192,5,45,0,0,192,62,1,0,0,0,193,194,5,58,0,0,194,64,1,
        0,0,0,195,196,5,59,0,0,196,66,1,0,0,0,197,198,5,95,0,0,198,68,1,
        0,0,0,199,200,5,39,0,0,200,70,1,0,0,0,201,202,5,34,0,0,202,72,1,
        0,0,0,203,204,5,96,0,0,204,74,1,0,0,0,205,206,5,42,0,0,206,76,1,
        0,0,0,207,208,5,33,0,0,208,78,1,0,0,0,209,210,5,64,0,0,210,80,1,
        0,0,0,211,212,5,91,0,0,212,82,1,0,0,0,213,214,5,93,0,0,214,84,1,
        0,0,0,215,216,2,19968,40869,0,216,86,1,0,0,0,217,218,5,46,0,0,218,
        88,1,0,0,0,219,220,7,28,0,0,220,90,1,0,0,0,221,222,3,9,4,0,222,223,
        3,35,17,0,223,224,3,15,7,0,224,92,1,0,0,0,225,226,3,37,18,0,226,
        227,3,43,21,0,227,94,1,0,0,0,228,230,5,61,0,0,229,231,5,61,0,0,230,
        229,1,0,0,0,230,231,1,0,0,0,231,234,1,0,0,0,232,234,3,63,31,0,233,
        228,1,0,0,0,233,232,1,0,0,0,234,96,1,0,0,0,235,236,5,33,0,0,236,
        237,5,61,0,0,237,98,1,0,0,0,238,239,5,60,0,0,239,100,1,0,0,0,240,
        241,5,60,0,0,241,242,5,61,0,0,242,102,1,0,0,0,243,244,5,62,0,0,244,
        104,1,0,0,0,245,246,5,62,0,0,246,247,5,61,0,0,247,106,1,0,0,0,248,
        249,5,64,0,0,249,108,1,0,0,0,250,251,5,33,0,0,251,252,5,64,0,0,252,
        110,1,0,0,0,253,254,3,47,23,0,254,255,3,43,21,0,255,256,3,49,24,
        0,256,257,3,17,8,0,257,265,1,0,0,0,258,259,3,19,9,0,259,260,3,9,
        4,0,260,261,3,31,15,0,261,262,3,45,22,0,262,263,3,17,8,0,263,265,
        1,0,0,0,264,253,1,0,0,0,264,258,1,0,0,0,265,112,1,0,0,0,266,268,
        3,61,30,0,267,266,1,0,0,0,267,268,1,0,0,0,268,270,1,0,0,0,269,271,
        3,5,2,0,270,269,1,0,0,0,271,272,1,0,0,0,272,270,1,0,0,0,272,273,
        1,0,0,0,273,114,1,0,0,0,274,276,3,61,30,0,275,274,1,0,0,0,275,276,
        1,0,0,0,276,278,1,0,0,0,277,279,3,5,2,0,278,277,1,0,0,0,279,280,
        1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,282,1,0,0,0,282,284,
        3,87,43,0,283,285,3,5,2,0,284,283,1,0,0,0,285,286,1,0,0,0,286,284,
        1,0,0,0,286,287,1,0,0,0,287,116,1,0,0,0,288,294,5,34,0,0,289,293,
        8,29,0,0,290,291,5,92,0,0,291,293,7,29,0,0,292,289,1,0,0,0,292,290,
        1,0,0,0,293,296,1,0,0,0,294,292,1,0,0,0,294,295,1,0,0,0,295,297,
        1,0,0,0,296,294,1,0,0,0,297,309,5,34,0,0,298,304,5,39,0,0,299,303,
        8,30,0,0,300,301,5,92,0,0,301,303,7,30,0,0,302,299,1,0,0,0,302,300,
        1,0,0,0,303,306,1,0,0,0,304,302,1,0,0,0,304,305,1,0,0,0,305,307,
        1,0,0,0,306,304,1,0,0,0,307,309,5,39,0,0,308,288,1,0,0,0,308,298,
        1,0,0,0,309,118,1,0,0,0,310,316,3,85,42,0,311,316,3,7,3,0,312,316,
        3,5,2,0,313,316,3,67,33,0,314,316,3,87,43,0,315,310,1,0,0,0,315,
        311,1,0,0,0,315,312,1,0,0,0,315,313,1,0,0,0,315,314,1,0,0,0,316,
        317,1,0,0,0,317,315,1,0,0,0,317,318,1,0,0,0,318,120,1,0,0,0,319,
        320,3,75,37,0,320,122,1,0,0,0,321,322,3,77,38,0,322,124,1,0,0,0,
        323,324,3,81,40,0,324,126,1,0,0,0,325,326,3,83,41,0,326,128,1,0,
        0,0,327,329,7,31,0,0,328,327,1,0,0,0,329,330,1,0,0,0,330,328,1,0,
        0,0,330,331,1,0,0,0,331,332,1,0,0,0,332,333,6,64,0,0,333,130,1,0,
        0,0,17,0,230,233,264,267,272,275,280,286,292,294,302,304,308,315,
        317,330,1,6,0,0
    ]

class MongoEngineDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    DOT = 3
    COMMA = 4
    AND = 5
    OR = 6
    EQ = 7
    NE = 8
    LT = 9
    LE = 10
    GT = 11
    GE = 12
    IN = 13
    NIN = 14
    BOOL = 15
    INT = 16
    DOUBLE = 17
    QSTR = 18
    TOKEN = 19
    WILDCARD = 20
    DENIED = 21
    ARR_LPOS = 22
    ARR_RPOS = 23
    WS = 24

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'.'", "'!='", "'<'", "'<='", "'>'", "'>='", "'@'", 
            "'!@'" ]

    symbolicNames = [ "<INVALID>",
            "DOT", "COMMA", "AND", "OR", "EQ", "NE", "LT", "LE", "GT", "GE", 
            "IN", "NIN", "BOOL", "INT", "DOUBLE", "QSTR", "TOKEN", "WILDCARD", 
            "DENIED", "ARR_LPOS", "ARR_RPOS", "WS" ]

    ruleNames = [ "T__0", "T__1", "DIGIT", "LETTER", "A", "B", "C", "D", 
                  "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", 
                  "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", 
                  "MINUS", "COLON", "SEMI", "UNDERSCORE", "SINGLE_QUOTE", 
                  "DOUBLE_QUOTE", "REVERSE_QUOTE", "STAR", "EXCLAMATION_MARK", 
                  "AT_MARK", "LSBRACKET", "RSBRACKET", "CHINESE", "DOT", 
                  "COMMA", "AND", "OR", "EQ", "NE", "LT", "LE", "GT", "GE", 
                  "IN", "NIN", "BOOL", "INT", "DOUBLE", "QSTR", "TOKEN", 
                  "WILDCARD", "DENIED", "ARR_LPOS", "ARR_RPOS", "WS" ]

    grammarFileName = "MongoEngineDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



debug: false

#    """
#    Logic:
#        1- load the history table for the member_details sync table only include the records with
#           the last job_id present in the history table
#        2- create the full data for member_details
#        3- compare the full data against the last history data to create the incremental table with 3 operations
#         INSERT if records are present in the full table but not in the history (using the pk for the comparison
#         DELETE if records are present in the history  table but not in the full table
#         UPDATE If recorda are present in both tables (history and full) but the hash value is different
# 01/04/2022 : Add filter to exclude rows with year that are NOT in the 3 year window
#    """

## Files to Load / Create View
variables:
  - project_root_path = {config.project_root_path}
#  - cad_job_id = {config.job_id}
  - client = {config.client}
  - aggr_location =  {config.aggr_location}
  - debug = False

Extract:
  member_details_history:
    type: parquet
    location: "{aggr_location}/member_details_history/"

  eamd:
    type: parquet
    location: "{project_root_path}/{client}/EAMD/"

  job:
    type: postgres
    conn_config_name: cadmium_postgres_db
    table_name: job

  EpiAnalyst_Client_Settings:
    type: parquet
    location: "{project_root_path}/{client}/EpiAnalyst_Client_Settings/"

Transform:
  cad_job:
    sql: >-
      With LastJob as (
        SELECT
          max(id) as last_job_id,
          max(client_name) as client_name
          FROM job
          WHERE status = 'CLOSED' and client_name ='{client}'
        )
      SELECT
        max(j.id) as cad_job_id, max(coalesce(l.last_job_id,0)) as last_job_id
        FROM job j
        inner join LastJob l on j.client_name = l.client_name
        WHERE status = 'OPEN'
    cache: true

#  previous_load:
#    sql: >-
#     WITH allrows as (
#        SELECT
#           * , row_number() over(partition by member_id, year order by  job_id desc ) as r
#        FROM member_details_history)
#     SELECT
#        member_id,
#        year,
#        hash_value,
#        job_id
#     FROM allrows
#     WHERE  r=1

    # previous job should ONLY include the table keys , hash values and job id for the previous job_id for the specific client
  previous_load:
    sql: >-
      SELECT
         member_id,
         year,
         hash_value,
         job_id
      FROM member_details_history m
      INNER JOIN cad_job  c on c.last_job_id =m.job_id
    cache: true

#tested with SSS with:
#      limit 10
#  WHERE a.member_id in (
#  '580905491A',
#  '580526287D',
#  '580641903B',
#  '583052395A',
#  '584078579A',
#  '581108425D',
#  '121461430A',
#  '581313808A',
#  'E19480315VEM440056',
#  '581520906A')
  member_details_full:
    sql: >-
      with details as (
      SELECT
        year(current_date()) as load_year,
        month(current_date()) as load_month,
        current_timestamp() as load_timestamp,
        a.member_id,
        a.year,
        a.dos_count,
        a.eligibility_date,
        a.eligibility_end_date,
        ifnull(a.is_eligible, false) as is_eligible ,
        a.medicaid,
        a.months_eligible,
        a.opportunity,
        a.pcp_dos_count,
        a.raf_captured,
        a.raf_demographic,
        a.raf_projected,
        a.recap_count,
        a.recap_opp_count,
        ifnull(a.wellness_visit, false) as wellness_visit ,
        a.hcc_captured,
        a.hcc_captured_source_claim,
        a.hcc_captured_source_hra,
        a.hcc_captured_source_hra_crr,
        a.hcc_captured_source_mor,
        a.hcc_captured_source_crr,
        a.hcc_captured_source_other,
        a.hcc_captured_new_chronic,
        a.hcc_captured_yoy_recapture,
        a.hcc_captured_mor_new_chronic,
        a.hcc_captured_mor_yoy_recapture,
        a.hcc_captured_acute,
        a.hcc_captured_other,
        a.hcc_suspects_all,
        a.hcc_suspects_yoy,
        a.hcc_suspects_mor_yoy,
        a.hcc_suspects_u,
        a.hcc_suspects_asr,
        a.hcc_suspects_n,
        a.hcc_suspects_cpt,
        a.hcc_suspects_ml,
        a.hcc_suspects_other,
        a.hcc_suspects_clinical,
        a.hcc_captured_num_source_claim,
        a.hcc_captured_num_source_hra,
        a.hcc_captured_num_source_hra_crr,
        a.hcc_captured_num_source_mor,
        a.hcc_captured_num_source_crr,
        a.hcc_captured_num_source_other,
        a.hcc_captured_num_new_chronic,
        a.hcc_captured_num_yoy_recapture,
        a.hcc_captured_num_mor_new_chronic,
        a.hcc_captured_num_mor_yoy_recapture,
        a.hcc_captured_num_acute,
        a.hcc_captured_num_other,
        a.hcc_suspects_num_yoy,
        a.hcc_suspects_num_mor_yoy,
        a.hcc_suspects_num_u,
        a.hcc_suspects_num_asr,
        a.hcc_suspects_num_n,
        a.hcc_suspects_num_cpt,
        a.hcc_suspects_num_ml,
        a.hcc_suspects_num_other,
        a.hcc_suspects_num_clinical,
        a.pcp_last_encounter,
        a.any_last_encounter,
        a.cf_profitability,
        a.dual_opp_score,
        a.raf_dual_boost,
        a.raf_profitability,
        a.raf_captured_cf,
        a.parta_ramra_pa,
        a.partb_ramra_pa,
        a.esrd,
        a.risk_code_type,
        ifnull(a.hra_completed, false) as hra_completed,
        a.year_name
       FROM eamd  a
      )
      select *,
        hash(
            a.member_id,
            a.year,
            a.dos_count,
            a.eligibility_date,
            a.eligibility_end_date,
            a.is_eligible,
            a.medicaid,
            a.months_eligible,
            a.opportunity,
            a.pcp_dos_count,
            a.raf_captured,
            a.raf_demographic,
            a.raf_projected,
            a.recap_count,
            a.recap_opp_count,
            a.wellness_visit,
            a.hcc_captured,
            a.hcc_captured_source_claim,
            a.hcc_captured_source_hra,
            a.hcc_captured_source_hra_crr,
            a.hcc_captured_source_mor,
            a.hcc_captured_source_crr,
            a.hcc_captured_source_other,
            a.hcc_captured_new_chronic,
            a.hcc_captured_yoy_recapture,
            a.hcc_captured_mor_new_chronic,
            a.hcc_captured_mor_yoy_recapture,
            a.hcc_captured_acute,
            a.hcc_captured_other,
            a.hcc_suspects_all,
            a.hcc_suspects_yoy,
            a.hcc_suspects_mor_yoy,
            a.hcc_suspects_u,
            a.hcc_suspects_asr,
            a.hcc_suspects_n,
            a.hcc_suspects_cpt,
            a.hcc_suspects_ml,
            a.hcc_suspects_other,
            a.hcc_suspects_clinical,
            a.hcc_captured_num_source_claim,
            a.hcc_captured_num_source_hra,
            a.hcc_captured_num_source_hra_crr,
            a.hcc_captured_num_source_mor,
            a.hcc_captured_num_source_crr,
            a.hcc_captured_num_source_other,
            a.hcc_captured_num_new_chronic,
            a.hcc_captured_num_yoy_recapture,
            a.hcc_captured_num_mor_new_chronic,
            a.hcc_captured_num_mor_yoy_recapture,
            a.hcc_captured_num_acute,
            a.hcc_captured_num_other,
            a.hcc_suspects_num_yoy,
            a.hcc_suspects_num_mor_yoy,
            a.hcc_suspects_num_u,
            a.hcc_suspects_num_asr,
            a.hcc_suspects_num_n,
            a.hcc_suspects_num_cpt,
            a.hcc_suspects_num_ml,
            a.hcc_suspects_num_other,
            a.hcc_suspects_num_clinical,
            a.pcp_last_encounter,
            a.any_last_encounter,
            a.cf_profitability,
            a.dual_opp_score,
            a.raf_dual_boost,
            a.raf_profitability,
            a.raf_captured_cf,
            a.parta_ramra_pa,
            a.partb_ramra_pa,
            a.esrd,
            a.risk_code_type,
            a.hra_completed) as hash_value,
         ( select cad_job_id from cad_job )  as job_id
      FROM  details a

  member_details_incremental:
    sql: >-
      WITH new_rows as (
           SELECT
            a.hash_value,
            'INSERT' as operation,
            a.job_id,
            a.load_year,
            a.load_month,
            a.member_id,
            a.year,
            a.dos_count,
            a.eligibility_date,
            a.eligibility_end_date,
            a.is_eligible,
            a.medicaid,
            a.months_eligible,
            a.opportunity,
            a.pcp_dos_count,
            a.raf_captured,
            a.raf_demographic,
            a.raf_projected,
            a.recap_count,
            a.recap_opp_count,
            a.wellness_visit,
            a.hcc_captured,
            a.hcc_captured_source_claim,
            a.hcc_captured_source_hra,
            a.hcc_captured_source_hra_crr,
            a.hcc_captured_source_mor,
            a.hcc_captured_source_crr,
            a.hcc_captured_source_other,
            a.hcc_captured_new_chronic,
            a.hcc_captured_yoy_recapture,
            a.hcc_captured_mor_new_chronic,
            a.hcc_captured_mor_yoy_recapture,
            a.hcc_captured_acute,
            a.hcc_captured_other,
            a.hcc_suspects_all,
            a.hcc_suspects_yoy,
            a.hcc_suspects_mor_yoy,
            a.hcc_suspects_u,
            a.hcc_suspects_asr,
            a.hcc_suspects_n,
            a.hcc_suspects_cpt,
            a.hcc_suspects_ml,
            a.hcc_suspects_other,
            a.hcc_suspects_clinical,
            a.hcc_captured_num_source_claim,
            a.hcc_captured_num_source_hra,
            a.hcc_captured_num_source_hra_crr,
            a.hcc_captured_num_source_mor,
            a.hcc_captured_num_source_crr,
            a.hcc_captured_num_source_other,
            a.hcc_captured_num_new_chronic,
            a.hcc_captured_num_yoy_recapture,
            a.hcc_captured_num_mor_new_chronic,
            a.hcc_captured_num_mor_yoy_recapture,
            a.hcc_captured_num_acute,
            a.hcc_captured_num_other,
            a.hcc_suspects_num_yoy,
            a.hcc_suspects_num_mor_yoy,
            a.hcc_suspects_num_u,
            a.hcc_suspects_num_asr,
            a.hcc_suspects_num_n,
            a.hcc_suspects_num_cpt,
            a.hcc_suspects_num_ml,
            a.hcc_suspects_num_other,
            a.hcc_suspects_num_clinical,
            a.pcp_last_encounter,
            a.any_last_encounter,
            a.cf_profitability,
            a.dual_opp_score,
            a.raf_dual_boost,
            a.raf_profitability,
            a.raf_captured_cf,
            a.parta_ramra_pa,
            a.partb_ramra_pa,
            a.esrd,
            a.risk_code_type,
            a.hra_completed,
            a.year_name
          FROM  member_details_full a
          inner join EpiAnalyst_Client_Settings s on a.year between s.current_year - 2 and  s.current_year
          LEFT JOIN  previous_load b on a.member_id = b.member_id and a.year = b.year
          WHERE b.member_id is null ),
      delete_rows as (
          SELECT
             a.hash_value,
             'DELETE' as operation,
              ( select cad_job_id from cad_job )  as job_id,
             cast(null as integer) as load_year,
             cast(null as integer) as load_month,
             a.member_id,
             a.year,
              cast(null as long) as dos_count,
              cast(null as  date) as eligibility_date,
              cast(null as  date) as eligibility_end_date,
              cast(null as boolean) as is_eligible,
              cast(null as string) as medicaid,
              cast(null as long) as months_eligible,
              cast(null as double) as opportunity,
              cast(null as long) as pcp_dos_count,
              cast(null as double) as raf_captured,
              cast(null as double) as raf_demographic,
              cast(null as double) as raf_projected,
              cast(null as long) as recap_count,
              cast(null as long) as recap_opp_count,
              cast(null as boolean) as wellness_visit,
              cast(null as double) as hcc_captured,
              cast(null as double) as hcc_captured_source_claim,
              cast(null as double) as hcc_captured_source_hra,
              cast(null as double) as hcc_captured_source_hra_crr,
              cast(null as double) as hcc_captured_source_mor,
              cast(null as double) as hcc_captured_source_crr,
              cast(null as double) as hcc_captured_source_other,
              cast(null as double) as hcc_captured_new_chronic,
              cast(null as double) as hcc_captured_yoy_recapture,
              cast(null as double) as hcc_captured_mor_new_chronic,
              cast(null as double) as hcc_captured_mor_yoy_recapture,
              cast(null as double) as hcc_captured_acute,
              cast(null as double) as hcc_captured_other,
              cast(null as double) as hcc_suspects_all,
              cast(null as double) as hcc_suspects_yoy,
              cast(null as double) as hcc_suspects_mor_yoy,
              cast(null as double) as hcc_suspects_u,
              cast(null as double) as hcc_suspects_asr,
              cast(null as double) as hcc_suspects_n,
              cast(null as double) as hcc_suspects_cpt,
              cast(null as double) as hcc_suspects_ml,
              cast(null as double) as hcc_suspects_other,
              cast(null as double) as hcc_suspects_clinical,
              cast(null as long) as hcc_captured_num_source_claim,
              cast(null as long) as hcc_captured_num_source_hra,
              cast(null as long) as hcc_captured_num_source_hra_crr,
              cast(null as long) as hcc_captured_num_source_mor,
              cast(null as long) as hcc_captured_num_source_crr,
              cast(null as long) as hcc_captured_num_source_other,
              cast(null as long) as hcc_captured_num_new_chronic,
              cast(null as long) as hcc_captured_num_yoy_recapture,
              cast(null as long) as hcc_captured_num_mor_new_chronic,
              cast(null as long) as hcc_captured_num_mor_yoy_recapture,
              cast(null as long) as hcc_captured_num_acute,
              cast(null as long) as hcc_captured_num_other,
              cast(null as long) as hcc_suspects_num_yoy,
              cast(null as long) as hcc_suspects_num_mor_yoy,
              cast(null as long) as hcc_suspects_num_u,
              cast(null as long) as hcc_suspects_num_asr,
              cast(null as long) as hcc_suspects_num_n,
              cast(null as long) as hcc_suspects_num_cpt,
              cast(null as long) as hcc_suspects_num_ml,
              cast(null as long) as hcc_suspects_num_other,
              cast(null as long) as hcc_suspects_num_clinical,
              cast(null as  date) as pcp_last_encounter,
              cast(null as  date) as any_last_encounter,
              cast(null as double) as cf_profitability,
              cast(null as double) as dual_opp_score,
              cast(null as double) as raf_dual_boost,
              cast(null as double) as raf_profitability,
              cast(null as double) as raf_captured_cf,
              cast(null as double) as parta_ramra_pa,
              cast(null as double) as partb_ramra_pa,
              cast(null as string) as esrd,
              cast(null as string) as risk_code_type,
              cast(null as boolean) as hra_completed,
              cast(null as string) as year_name
          FROM  previous_load a
          inner join EpiAnalyst_Client_Settings s on a.year between s.current_year - 2 and  s.current_year
          LEFT JOIN  member_details_full  b on a.member_id = b.member_id and a.year = b.year
          WHERE b.member_id is null ),
      update_rows as (
          SELECT
             a.hash_value,
             'UPDATE' as operation,
             a.job_id,
             a.load_year,
             a.load_month,
            a.member_id,
            a.year,
            a.dos_count,
            a.eligibility_date,
            a.eligibility_end_date,
            a.is_eligible,
            a.medicaid,
            a.months_eligible,
            a.opportunity,
            a.pcp_dos_count,
            a.raf_captured,
            a.raf_demographic,
            a.raf_projected,
            a.recap_count,
            a.recap_opp_count,
            a.wellness_visit,
            a.hcc_captured,
            a.hcc_captured_source_claim,
            a.hcc_captured_source_hra,
            a.hcc_captured_source_hra_crr,
            a.hcc_captured_source_mor,
            a.hcc_captured_source_crr,
            a.hcc_captured_source_other,
            a.hcc_captured_new_chronic,
            a.hcc_captured_yoy_recapture,
            a.hcc_captured_mor_new_chronic,
            a.hcc_captured_mor_yoy_recapture,
            a.hcc_captured_acute,
            a.hcc_captured_other,
            a.hcc_suspects_all,
            a.hcc_suspects_yoy,
            a.hcc_suspects_mor_yoy,
            a.hcc_suspects_u,
            a.hcc_suspects_asr,
            a.hcc_suspects_n,
            a.hcc_suspects_cpt,
            a.hcc_suspects_ml,
            a.hcc_suspects_other,
            a.hcc_suspects_clinical,
            a.hcc_captured_num_source_claim,
            a.hcc_captured_num_source_hra,
            a.hcc_captured_num_source_hra_crr,
            a.hcc_captured_num_source_mor,
            a.hcc_captured_num_source_crr,
            a.hcc_captured_num_source_other,
            a.hcc_captured_num_new_chronic,
            a.hcc_captured_num_yoy_recapture,
            a.hcc_captured_num_mor_new_chronic,
            a.hcc_captured_num_mor_yoy_recapture,
            a.hcc_captured_num_acute,
            a.hcc_captured_num_other,
            a.hcc_suspects_num_yoy,
            a.hcc_suspects_num_mor_yoy,
            a.hcc_suspects_num_u,
            a.hcc_suspects_num_asr,
            a.hcc_suspects_num_n,
            a.hcc_suspects_num_cpt,
            a.hcc_suspects_num_ml,
            a.hcc_suspects_num_other,
            a.hcc_suspects_num_clinical,
            a.pcp_last_encounter,
            a.any_last_encounter,
            a.cf_profitability,
            a.dual_opp_score,
            a.raf_dual_boost,
            a.raf_profitability,
            a.raf_captured_cf,
            a.parta_ramra_pa,
            a.partb_ramra_pa,
            a.esrd,
            a.risk_code_type,
            a.hra_completed,
            a.year_name
           FROM   member_details_full  a
           inner join EpiAnalyst_Client_Settings s on a.year between s.current_year - 2 and  s.current_year
           INNER JOIN previous_load b on a.member_id = b.member_id and a.year = b.year
           WHERE a.hash_value <> b.hash_value )
      SELECT *
      FROM new_rows
      UNION
      SELECT *
      FROM delete_rows
      UNION
      SELECT *
      FROM update_rows

# Note: Load tables have to be same as Extract tables.
Load:
  member_details_full:
    load_1:
      type: parquet
      location: '{aggr_location}/member_details_full'
      mode: overwrite

  member_details_incremental:
    load_1:
      type: parquet
      location: '{project_root_path}/{client}/sync/member_details_incremental'
      mode: overwrite
#    load_to_postgres:
#      type: postgres
#      conn_config_name: epia_medicare_postgres
#      table_name: load_member_details
#      mode: overwrite
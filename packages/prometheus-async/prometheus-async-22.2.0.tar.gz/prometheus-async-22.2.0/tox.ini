# Keep docs in sync with docs env and .readthedocs.yml.
[gh-actions]
python =
    3.7: py37, mypy
    3.8: py38, mypy
    3.9: py39, mypy
    3.10: py310, cogCheck, docs, mypy


[tox]
envlist = pre-commit,cogCheck,cog,mypy,{py37,py38,py39,py310}{,-twisted,-aiohttp,-oldest},docs,pypi-description,coverage-report
isolated_build = true


[testenv:docs]
description = Build docs and run doctests.
# Keep basepython in sync with gh-actions and .readthedocs.yml.
basepython = python3.10
extras = docs
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html


[testenv:pre-commit]
description = Run all pre-commit hooks.
basepython = python3.10
skip_install = true
deps = pre-commit
passenv = HOMEPATH  # needed on Windows
commands = pre-commit run --all-files


[testenv:mypy]
description = Check type hints.
extras = dev
deps = mypy
commands = mypy src typing_examples.py


[testenv]
description = Run tests.
extras = tests
deps =
    twisted: .[twisted]
    twisted: pytest-twisted
    aiohttp: .[aiohttp]
    oldest: .[aiohttp]
    oldest: prometheus-client==0.8.0
commands =
    python -m pytest {posargs}


[testenv:py38]
description = Run tests and measure coverage.
extras = tests
commands =
    coverage run --parallel -m pytest {posargs}


[testenv:py38-aiohttp]
description = Run tests and measure coverage.
extras =
    tests
    aiohttp
commands =
    coverage run --parallel -m pytest {posargs}


[testenv:py38-twisted]
description = Run tests and measure coverage.
extras =
    tests
    twisted
commands =
    coverage run --parallel -m pytest {posargs}


[testenv:cog]
description = "Update pyproject.toml's metadata"
skip_install = true
deps =
    cogapp>=3.3.0
    tomli
commands = python -m cogapp -rP pyproject.toml


[testenv:cogCheck]
description = "Ensure pyproject.toml is up to date"
basepython = python3.10
skip_install = true
deps = {[testenv:cog]deps}
commands = python -m cogapp --check -P pyproject.toml


[testenv:pypi-description]
description = Ensure README.rst renders on PyPI.
basepython = python3.8
skip_install = true
deps =
    twine
    pip >= 18.0.0
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*


[testenv:coverage-report]
description = Report coverage over all measured test runs.
basepython = python3.8
deps = coverage[toml]
skip_install = true
commands =
    coverage combine
    coverage report

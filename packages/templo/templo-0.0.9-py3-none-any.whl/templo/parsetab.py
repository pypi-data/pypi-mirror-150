
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftORleftANDleftNOTnonassocEQNEGTGELTLEISINISNOTNOTINleftADDSUBleftMULDIVFDIVRMDleftPOWrightUMINUSUPLUSleftCSADD AND CE CS DIV DOT ELIF ELSE ENDFOR ENDIF ENDREPEAT EQ FALSE FDIV FOR GE GT IF IN IS ISNOT LE LT MUL NE NOT NOTIN OE OR OS PIPE POW REPEAT RMD SUB TRUE float id int str textTemplate : ElemsElems : Elems ElemElems :Elem : textElem : CodeCode : ExpressionCode : StatementExpression : OE Exp CEStatement : IfStatement : ForStatement : RepeatIf : OS IF Exp CS Elems OS ENDIF CSIf : OS IF Exp CS Elems OS ELSE CS Elems OS ENDIF CSIf : OS IF Exp CS Elems Elifs OS ENDIF CSIf : OS IF Exp CS Elems Elifs OS ELSE CS Elems OS ENDIF CSElifs : Elifs ElifElifs : ElifElif : OS ELIF Exp CS ElemsFor : OS FOR id IN id CS Elems OS ENDFOR CSFor : OS FOR id ',' id IN id CS Elems OS ENDFOR CSRepeat : OS REPEAT Exp CS Elems OS ENDREPEAT CSExp : idExp : LiteralExp : AExp\n    Exp : RExp\n    Exp : LExp\n    Exp : OExpExp : '(' Exp ')'Literal : strLiteral : NumLiteral : BoolLiteral : '[' List ']'List : List ',' ExpList : ExpList :Num : intNum : floatBool : TRUEBool : FALSEAExp : Exp ADD Exp\n    | Exp SUB Exp\n    | Exp MUL Exp\n    | Exp DIV Exp\n    | Exp FDIV Exp\n    | Exp RMD Exp\n    | Exp POW ExpAExp : SUB Exp %prec UMINUSAExp : ADD Exp %prec UPLUSRExp : Exp EQ Exp\n    | Exp NE Exp\n    | Exp GT Exp\n    | Exp GE Exp\n    | Exp LT Exp\n    | Exp LE Exp\n    | Exp IS id\n    | Exp IN ExpRExp : Exp ISNOT idRExp : Exp NOTIN ExpLExp : NOT ExpLExp : Exp AND ExpLExp : Exp OR ExpOExp : Exp PIPE idOExp : Exp DOT idOExp : Exp '[' Exp ']'OExp : Exp DOT id '(' Args ')'Args : Args ',' ExpArgs : ExpArgs :"
    
_lr_action_items = {'text':([0,2,3,4,5,6,7,9,10,11,35,92,95,99,102,108,118,122,123,128,129,130,131,132,133,135,137,138,139,144,146,147,],[-3,4,-2,-4,-5,-6,-7,-9,-10,-11,-8,-3,-3,4,4,-3,4,-12,-3,-3,-21,4,-3,-14,-3,4,4,4,-19,-13,-20,-15,]),'OE':([0,2,3,4,5,6,7,9,10,11,35,92,95,99,102,108,118,122,123,128,129,130,131,132,133,135,137,138,139,144,146,147,],[-3,8,-2,-4,-5,-6,-7,-9,-10,-11,-8,-3,-3,8,8,-3,8,-12,-3,-3,-21,8,-3,-14,-3,8,8,8,-19,-13,-20,-15,]),'OS':([0,2,3,4,5,6,7,9,10,11,35,92,95,99,102,106,107,108,117,118,122,123,128,129,130,131,132,133,135,137,138,139,144,146,147,],[-3,12,-2,-4,-5,-6,-7,-9,-10,-11,-8,-3,-3,105,110,116,-17,-3,-16,127,-12,-3,-3,-21,136,-3,-14,-3,140,-18,142,-19,-13,-20,-15,]),'$end':([0,1,2,3,4,5,6,7,9,10,11,35,122,129,132,139,144,146,147,],[-3,0,-1,-2,-4,-5,-6,-7,-9,-10,-11,-8,-12,-21,-14,-19,-13,-20,-15,]),'id':([8,20,24,25,26,27,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,91,93,94,96,109,112,115,],[14,14,14,14,14,14,14,65,14,14,14,14,14,14,14,14,14,14,14,14,14,14,80,14,82,14,14,14,86,87,14,14,100,101,14,119,14,14,]),'(':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,87,91,96,112,115,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,96,20,20,20,20,]),'str':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'[':([8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,98,103,111,112,115,121,124,],[24,57,-22,-23,-24,-25,-26,-27,24,-29,-30,-31,24,24,24,24,-36,-37,-38,-39,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,57,57,-48,-47,-59,57,57,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-62,-63,57,-28,-32,24,24,-64,57,57,-65,24,24,57,57,]),'SUB':([8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,98,103,111,112,115,121,124,],[26,37,-22,-23,-24,-25,-26,-27,26,-29,-30,-31,26,26,26,26,-36,-37,-38,-39,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,37,37,-48,-47,37,37,37,-40,-41,-42,-43,-44,-45,-46,37,37,37,37,37,37,-55,37,-57,37,37,37,-62,-63,37,-28,-32,26,26,-64,37,37,-65,26,26,37,37,]),'ADD':([8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,98,103,111,112,115,121,124,],[25,36,-22,-23,-24,-25,-26,-27,25,-29,-30,-31,25,25,25,25,-36,-37,-38,-39,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,36,36,-48,-47,36,36,36,-40,-41,-42,-43,-44,-45,-46,36,36,36,36,36,36,-55,36,-57,36,36,36,-62,-63,36,-28,-32,25,25,-64,36,36,-65,25,25,36,36,]),'NOT':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'int':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'float':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TRUE':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'FALSE':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'IF':([12,105,110,127,136,140,142,],[32,32,32,32,32,32,32,]),'FOR':([12,105,110,127,136,140,142,],[33,33,33,33,33,33,33,]),'REPEAT':([12,105,110,127,136,140,142,],[34,34,34,34,34,34,34,]),'CE':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,97,111,],[35,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,-48,-47,-59,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-62,-63,-28,-32,-64,-65,]),'MUL':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[38,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,38,38,-48,-47,38,38,38,38,38,-42,-43,-44,-45,-46,38,38,38,38,38,38,-55,38,-57,38,38,38,-62,-63,38,-28,-32,-64,38,38,-65,38,38,]),'DIV':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[39,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,39,39,-48,-47,39,39,39,39,39,-42,-43,-44,-45,-46,39,39,39,39,39,39,-55,39,-57,39,39,39,-62,-63,39,-28,-32,-64,39,39,-65,39,39,]),'FDIV':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[40,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,40,40,-48,-47,40,40,40,40,40,-42,-43,-44,-45,-46,40,40,40,40,40,40,-55,40,-57,40,40,40,-62,-63,40,-28,-32,-64,40,40,-65,40,40,]),'RMD':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[41,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,41,41,-48,-47,41,41,41,41,41,-42,-43,-44,-45,-46,41,41,41,41,41,41,-55,41,-57,41,41,41,-62,-63,41,-28,-32,-64,41,41,-65,41,41,]),'POW':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[42,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,42,42,-48,-47,42,42,42,42,42,42,42,42,42,-46,42,42,42,42,42,42,-55,42,-57,42,42,42,-62,-63,42,-28,-32,-64,42,42,-65,42,42,]),'EQ':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[43,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,43,43,-48,-47,43,43,43,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,43,43,-62,-63,43,-28,-32,-64,43,43,-65,43,43,]),'NE':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[44,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,44,44,-48,-47,44,44,44,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,44,44,-62,-63,44,-28,-32,-64,44,44,-65,44,44,]),'GT':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[45,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,45,45,-48,-47,45,45,45,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,45,45,-62,-63,45,-28,-32,-64,45,45,-65,45,45,]),'GE':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[46,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,46,46,-48,-47,46,46,46,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,46,46,-62,-63,46,-28,-32,-64,46,46,-65,46,46,]),'LT':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[47,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,47,47,-48,-47,47,47,47,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,47,47,-62,-63,47,-28,-32,-64,47,47,-65,47,47,]),'LE':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[48,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,48,48,-48,-47,48,48,48,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,48,48,-62,-63,48,-28,-32,-64,48,48,-65,48,48,]),'IS':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[49,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,49,49,-48,-47,49,49,49,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,49,49,-62,-63,49,-28,-32,-64,49,49,-65,49,49,]),'IN':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,101,103,111,121,124,],[50,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,50,50,-48,-47,50,50,93,50,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,50,50,-62,-63,50,-28,-32,-64,50,109,50,-65,50,50,]),'ISNOT':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[51,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,51,51,-48,-47,51,51,51,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,51,51,-62,-63,51,-28,-32,-64,51,51,-65,51,51,]),'NOTIN':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[52,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,52,52,-48,-47,52,52,52,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-55,None,-57,None,52,52,-62,-63,52,-28,-32,-64,52,52,-65,52,52,]),'AND':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[53,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,53,53,-48,-47,-59,53,53,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,53,-62,-63,53,-28,-32,-64,53,53,-65,53,53,]),'OR':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[54,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,54,54,-48,-47,-59,54,54,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-62,-63,54,-28,-32,-64,54,54,-65,54,54,]),'PIPE':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[55,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,55,55,-48,-47,-59,55,55,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-62,-63,55,-28,-32,-64,55,55,-65,55,55,]),'DOT':([13,14,15,16,17,18,19,21,22,23,28,29,30,31,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,103,111,121,124,],[56,-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,56,56,-48,-47,-59,56,56,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-62,-63,56,-28,-32,-64,56,56,-65,56,56,]),')':([14,15,16,17,18,19,21,22,23,28,29,30,31,58,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,96,97,103,104,111,121,],[-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,89,-48,-47,-59,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-62,-63,-28,-32,-68,-64,-67,111,-65,-66,]),']':([14,15,16,17,18,19,21,22,23,24,28,29,30,31,59,60,61,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,111,],[-22,-23,-24,-25,-26,-27,-29,-30,-31,-35,-36,-37,-38,-39,90,-34,-48,-47,-59,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-62,-63,97,-28,-32,-64,-33,-65,]),',':([14,15,16,17,18,19,21,22,23,24,28,29,30,31,59,60,61,62,63,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,96,97,98,103,104,111,121,],[-22,-23,-24,-25,-26,-27,-29,-30,-31,-35,-36,-37,-38,-39,91,-34,-48,-47,-59,94,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-62,-63,-28,-32,-68,-64,-33,-67,112,-65,-66,]),'CS':([14,15,16,17,18,19,21,22,23,28,29,30,31,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,97,100,111,113,114,119,120,124,125,126,134,141,143,145,],[-22,-23,-24,-25,-26,-27,-29,-30,-31,-36,-37,-38,-39,-48,-47,-59,92,95,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-60,-61,-62,-63,-28,-32,-64,108,-65,122,123,128,129,131,132,133,139,144,146,147,]),'ENDIF':([105,116,136,142,],[113,125,141,145,]),'ELSE':([105,116,],[114,126,]),'ELIF':([105,116,],[115,115,]),'ENDREPEAT':([110,],[120,]),'ENDFOR':([127,140,],[134,143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Template':([0,],[1,]),'Elems':([0,92,95,108,123,128,131,133,],[2,99,102,118,130,135,137,138,]),'Elem':([2,99,102,118,130,135,137,138,],[3,3,3,3,3,3,3,3,]),'Code':([2,99,102,118,130,135,137,138,],[5,5,5,5,5,5,5,5,]),'Expression':([2,99,102,118,130,135,137,138,],[6,6,6,6,6,6,6,6,]),'Statement':([2,99,102,118,130,135,137,138,],[7,7,7,7,7,7,7,7,]),'If':([2,99,102,118,130,135,137,138,],[9,9,9,9,9,9,9,9,]),'For':([2,99,102,118,130,135,137,138,],[10,10,10,10,10,10,10,10,]),'Repeat':([2,99,102,118,130,135,137,138,],[11,11,11,11,11,11,11,11,]),'Exp':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[13,58,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,88,98,103,121,124,]),'Literal':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'AExp':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'RExp':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LExp':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'OExp':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'Num':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'Bool':([8,20,24,25,26,27,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,52,53,54,57,91,96,112,115,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'List':([24,],[59,]),'Args':([96,],[104,]),'Elifs':([99,],[106,]),'Elif':([99,106,],[107,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Template","S'",1,None,None,None),
  ('Template -> Elems','Template',1,'p_Template','parser.py',33),
  ('Elems -> Elems Elem','Elems',2,'p_Elems_multiple','parser.py',38),
  ('Elems -> <empty>','Elems',0,'p_Elems_single','parser.py',43),
  ('Elem -> text','Elem',1,'p_Elem_TEXT','parser.py',48),
  ('Elem -> Code','Elem',1,'p_Elem_Code','parser.py',53),
  ('Code -> Expression','Code',1,'p_Code_Expression','parser.py',58),
  ('Code -> Statement','Code',1,'p_Code_Statement','parser.py',63),
  ('Expression -> OE Exp CE','Expression',3,'p_Expression','parser.py',68),
  ('Statement -> If','Statement',1,'p_Statement_If','parser.py',73),
  ('Statement -> For','Statement',1,'p_Statement_For','parser.py',78),
  ('Statement -> Repeat','Statement',1,'p_Statement_Repeat','parser.py',83),
  ('If -> OS IF Exp CS Elems OS ENDIF CS','If',8,'p_If','parser.py',88),
  ('If -> OS IF Exp CS Elems OS ELSE CS Elems OS ENDIF CS','If',12,'p_If_else','parser.py',93),
  ('If -> OS IF Exp CS Elems Elifs OS ENDIF CS','If',9,'p_If_elifs','parser.py',98),
  ('If -> OS IF Exp CS Elems Elifs OS ELSE CS Elems OS ENDIF CS','If',13,'p_If_elifs_else','parser.py',103),
  ('Elifs -> Elifs Elif','Elifs',2,'p_Elifs_multiple','parser.py',108),
  ('Elifs -> Elif','Elifs',1,'p_Elifs_single','parser.py',113),
  ('Elif -> OS ELIF Exp CS Elems','Elif',5,'p_Elif','parser.py',118),
  ('For -> OS FOR id IN id CS Elems OS ENDFOR CS','For',10,'p_For','parser.py',123),
  ('For -> OS FOR id , id IN id CS Elems OS ENDFOR CS','For',12,'p_For_dict','parser.py',128),
  ('Repeat -> OS REPEAT Exp CS Elems OS ENDREPEAT CS','Repeat',8,'p_Repeat','parser.py',133),
  ('Exp -> id','Exp',1,'p_Exp_id','parser.py',138),
  ('Exp -> Literal','Exp',1,'p_Exp_Literal','parser.py',143),
  ('Exp -> AExp','Exp',1,'p_Exp_types','parser.py',148),
  ('Exp -> RExp','Exp',1,'p_Exp_types','parser.py',149),
  ('Exp -> LExp','Exp',1,'p_Exp_types','parser.py',150),
  ('Exp -> OExp','Exp',1,'p_Exp_types','parser.py',151),
  ('Exp -> ( Exp )','Exp',3,'p_Exp_braces','parser.py',156),
  ('Literal -> str','Literal',1,'p_Literal_str','parser.py',161),
  ('Literal -> Num','Literal',1,'p_Literal_Num','parser.py',166),
  ('Literal -> Bool','Literal',1,'p_Literal_Bool','parser.py',171),
  ('Literal -> [ List ]','Literal',3,'p_Literal_List','parser.py',176),
  ('List -> List , Exp','List',3,'p_List_multiple','parser.py',186),
  ('List -> Exp','List',1,'p_List_single','parser.py',191),
  ('List -> <empty>','List',0,'p_List_empty','parser.py',196),
  ('Num -> int','Num',1,'p_Num_int','parser.py',201),
  ('Num -> float','Num',1,'p_Num_float','parser.py',206),
  ('Bool -> TRUE','Bool',1,'p_Bool_TRUE','parser.py',211),
  ('Bool -> FALSE','Bool',1,'p_Bool_FALSE','parser.py',216),
  ('AExp -> Exp ADD Exp','AExp',3,'p_AExp_bin','parser.py',221),
  ('AExp -> Exp SUB Exp','AExp',3,'p_AExp_bin','parser.py',222),
  ('AExp -> Exp MUL Exp','AExp',3,'p_AExp_bin','parser.py',223),
  ('AExp -> Exp DIV Exp','AExp',3,'p_AExp_bin','parser.py',224),
  ('AExp -> Exp FDIV Exp','AExp',3,'p_AExp_bin','parser.py',225),
  ('AExp -> Exp RMD Exp','AExp',3,'p_AExp_bin','parser.py',226),
  ('AExp -> Exp POW Exp','AExp',3,'p_AExp_bin','parser.py',227),
  ('AExp -> SUB Exp','AExp',2,'p_AExp_UMINUS','parser.py',232),
  ('AExp -> ADD Exp','AExp',2,'p_AExp_UPLUS','parser.py',237),
  ('RExp -> Exp EQ Exp','RExp',3,'p_RExp_bin','parser.py',242),
  ('RExp -> Exp NE Exp','RExp',3,'p_RExp_bin','parser.py',243),
  ('RExp -> Exp GT Exp','RExp',3,'p_RExp_bin','parser.py',244),
  ('RExp -> Exp GE Exp','RExp',3,'p_RExp_bin','parser.py',245),
  ('RExp -> Exp LT Exp','RExp',3,'p_RExp_bin','parser.py',246),
  ('RExp -> Exp LE Exp','RExp',3,'p_RExp_bin','parser.py',247),
  ('RExp -> Exp IS id','RExp',3,'p_RExp_bin','parser.py',248),
  ('RExp -> Exp IN Exp','RExp',3,'p_RExp_bin','parser.py',249),
  ('RExp -> Exp ISNOT id','RExp',3,'p_RExp_NOTIN','parser.py',254),
  ('RExp -> Exp NOTIN Exp','RExp',3,'p_RExp_ISNOT','parser.py',259),
  ('LExp -> NOT Exp','LExp',2,'p_LExp_NOT','parser.py',264),
  ('LExp -> Exp AND Exp','LExp',3,'p_LExp_AND','parser.py',269),
  ('LExp -> Exp OR Exp','LExp',3,'p_LExp_OR','parser.py',274),
  ('OExp -> Exp PIPE id','OExp',3,'p_OExp_filter','parser.py',279),
  ('OExp -> Exp DOT id','OExp',3,'p_OExp_attr','parser.py',284),
  ('OExp -> Exp [ Exp ]','OExp',4,'p_OExp_item','parser.py',289),
  ('OExp -> Exp DOT id ( Args )','OExp',6,'p_OExp_method','parser.py',294),
  ('Args -> Args , Exp','Args',3,'p_Args_multiple','parser.py',299),
  ('Args -> Exp','Args',1,'p_Args_single','parser.py',304),
  ('Args -> <empty>','Args',0,'p_Args_empty','parser.py',309),
]

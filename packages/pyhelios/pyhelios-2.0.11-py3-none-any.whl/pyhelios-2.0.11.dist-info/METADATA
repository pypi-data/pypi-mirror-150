Metadata-Version: 2.1
Name: pyhelios
Version: 2.0.11
Summary: The Helios' toolbox
Home-page: https://pypi.org/project/pyhelios
License: MIT
Keywords: Computational Fluid Dynamics,Unstructured Mesh,Anisotropic Mesh Adaptation,High-Order RANS/LES,HPC
Author: Julien Vanharen
Author-email: julien.vanharen@gmail.com
Maintainer: Julien Vanharen
Maintainer-email: julien.vanharen@gmail.com
Requires-Python: >=3.7,<4.0.0
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Software Development :: Version Control :: Git
Requires-Dist: cmake-format (>=0.6.0,<0.7.0)
Requires-Dist: flatdict (>=4.0.0,<5.0.0)
Requires-Dist: ipython (>=7.0.0,<8.0.0)
Requires-Dist: jinja2 (>=3.0.0,<4.0.0)
Requires-Dist: loguru (==0.5.3)
Requires-Dist: numpy (>=1.21.0,<2.0.0)
Requires-Dist: pygments (>=2.0.0,<3.0.0)
Requires-Dist: pytomlpp (>=1.0.0,<2.0.0)
Requires-Dist: rich (>=10.0.0,<11.0.0)
Requires-Dist: traitlets (>=5.0.0,<6.0.0)
Requires-Dist: typer (>=0.4.0,<0.5.0)
Requires-Dist: xmltodict (>=0.12.0,<0.13.0)
Project-URL: Documentation, https://pypi.org/project/pyhelios
Project-URL: Repository, https://github.com/jvanhare/pyhelios
Description-Content-Type: text/markdown

# pyhelios: the Helios' toolbox

## Installation

```sh
pip install pyhelios
```

## Contributing

The pyhelios Python package is managed by awesome tools: [poetry](https://python-poetry.org/) and [tox](https://tox.wiki/en/latest/index.html).

1. Create a virtual environment using poetry.

```sh
poetry env use `which python`
```

2. Build the pyhelios Python package (sdist and wheel).

```sh
poetry build
```

2. Install in the previously created virtual environment.

```sh
poetry install
```

3. Run the tests.

```sh
poetry run python -m tox
```

4. Publish to the [Python Package Index](https://pypi.org/)

```sh
poetry publish
```

If necessary, [poetry](https://python-poetry.org/) can bump the version for you.
The new version should be a valid [semver](https://semver.org/) string or a valid bump rule: patch, minor, major, prepatch, preminor, premajor, prerelease.

```sh
poetry version patch[minor, major, prepatch, preminor, premajor, prerelease]
```

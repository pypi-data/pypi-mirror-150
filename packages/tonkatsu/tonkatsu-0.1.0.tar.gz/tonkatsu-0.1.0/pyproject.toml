[tool.poetry]
name = "tonkatsu"
version = "0.1.0"
description = "An asynchronous and lightweight wrapper around the anilist GraphQL API"
authors = ["Alex NÃ¸rgaard <Umbra@AbstractUmbra.dev>"]

license = "MIT"
readme = "README.md"
repository = "https://github.com/AbstractUmbra/tonkatsu"

keywords = ["anilist", "graphql", "wrapper", "api"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet",
    "Typing :: Typed",
]
include = ["LICENSE"]
packages = [
    { include = "tonkatsu" },
    { include = "tonkatsu/**/*.py" },
    { include = "tonkatsu/py.typed" },
]
[tool.poetry.urls]
"Issue Tracker" = "https://github.com/AbstractUmbra/tonkatsu/issues"
"Discord" = "https://discord.gg/aYGYJxwqe5"


[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.8.1"

sphinx = { version = "^4.0.0", optional = true }
sphinxcontrib-trio = { version = "*", optional = true }
furo = { version = "*", optional = true }

[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
poethepoet = "*"

[tool.poetry.extras]
docs = ["sphinx", "sphinxcontrib-trio", "furo"]

[tool.black]
line-length = 125
target-version = ["py310"]

[tool.isort]
profile = "black"
src_paths = ["hondana"]
known_first_party = "hondana"
lines_after_imports = 2

[tool.pyright]
exclude = ["_testing/**.py"]
useLibraryCodeForTypes = true
typeCheckingMode = "basic"
pythonVersion = "3.10"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true
reportMissingImports = "error"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedFunction = "error"
reportUnusedVariable = "error"
reportGeneralTypeIssues = "error"
reportFunctionMemberAccess = "error"
reportDuplicateImport = "error"
reportUntypedFunctionDecorator = "error"
reportUnnecessaryTypeIgnoreComment = "warning"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
